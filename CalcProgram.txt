$U34d80:8 = CALLOTHER "swi", 3:1
CALLIND $U34d80:8
RETURN 0:1
$Uf000:8 = COPY RBX
RSP = INT_SUB RSP, 8:8
STORE ram(RSP), $Uf000:8
CF = INT_LESS RSP, 64:8
OF = INT_SBORROW RSP, 64:8
RSP = INT_SUB RSP, 64:8
SF = INT_SLESS RSP, 0:8
ZF = INT_EQUAL RSP, 0:8
$U13480:8 = INT_AND RSP, 0xff:8
$U13500:1 = POPCOUNT $U13480:8
$U13580:1 = INT_AND $U13500:1, 1:1
PF = INT_EQUAL $U13580:1, 0:1
$U3c80:8 = INT_ADD 0x80:8, RSP
$Uc300:8 = LOAD ram($U3c80:8)
R10 = COPY $Uc300:8
RBX = COPY RCX
CF = COPY 0:1
OF = COPY 0:1
$U56680:8 = INT_AND R10, R10
SF = INT_SLESS $U56680:8, 0:8
ZF = INT_EQUAL $U56680:8, 0:8
$U13480:8 = INT_AND $U56680:8, 0xff:8
$U13500:1 = POPCOUNT $U13480:8
$U13580:1 = INT_AND $U13500:1, 1:1
PF = INT_EQUAL $U13580:1, 0:1
CBRANCH *[ram]0x140001082:8, ZF
$U3800:8 = INT_ADD 0x70:8, RSP
$Uc300:8 = LOAD ram($U3800:8)
R11 = COPY $Uc300:8
EAX = COPY EDX
RAX = INT_ZEXT EAX
CF = COPY 0:1
OF = COPY 0:1
$U56580:4 = INT_AND EDX, EDX
SF = INT_SLESS $U56580:4, 0:4
ZF = INT_EQUAL $U56580:4, 0:4
$U13480:4 = INT_AND $U56580:4, 0xff:4
$U13500:1 = POPCOUNT $U13480:4
$U13580:1 = INT_AND $U13500:1, 1:1
PF = INT_EQUAL $U13580:1, 0:1
CBRANCH *[ram]0x140001054:8, ZF
$U25a00:4 = COPY EAX
CF = INT_LESS $U25a00:4, 1:4
OF = INT_SBORROW $U25a00:4, 1:4
$U25b00:4 = INT_SUB $U25a00:4, 1:4
SF = INT_SLESS $U25b00:4, 0:4
ZF = INT_EQUAL $U25b00:4, 0:4
$U13480:4 = INT_AND $U25b00:4, 0xff:4
$U13500:1 = POPCOUNT $U13480:4
$U13580:1 = INT_AND $U13500:1, 1:1
PF = INT_EQUAL $U13580:1, 0:1
$Ucc00:1 = BOOL_NEGATE ZF
CBRANCH *[ram]0x140001058:8, $Ucc00:1
ECX = INT_ZEXT R8B
RCX = INT_ZEXT ECX
RAX = COPY 0x100:8
OF = INT_SCARRY ECX, 1:4
ECX = INT_ADD ECX, 1:4
RCX = INT_ZEXT ECX
SF = INT_SLESS ECX, 0:4
ZF = INT_EQUAL ECX, 0:4
$U13480:4 = INT_AND ECX, 0xff:4
$U13500:1 = POPCOUNT $U13480:4
$U13580:1 = INT_AND $U13500:1, 1:1
PF = INT_EQUAL $U13580:1, 0:1
$U3100:8 = INT_ADD R10, 16:8
$U5500:8 = COPY R9
STORE ram($U3100:8), $U5500:8
CF = COPY 0:1
OF = COPY 0:1
$U56380:1 = INT_AND R8B, R8B
SF = INT_SLESS $U56380:1, 0:1
ZF = INT_EQUAL $U56380:1, 0:1
$U13480:1 = INT_AND $U56380:1, 0xff:1
$U13500:1 = POPCOUNT $U13480:1
$U13580:1 = INT_AND $U13500:1, 1:1
PF = INT_EQUAL $U13580:1, 0:1
$U3100:8 = INT_ADD R10, 24:8
$U5500:8 = COPY R11
STORE ram($U3100:8), $U5500:8
$Ucc00:1 = BOOL_NEGATE ZF
RAX = INT_ZEXT EAX
$U24d80:1 = BOOL_NEGATE $Ucc00:1
CBRANCH *[ram]0x14000104f:8, $U24d80:1
EAX = COPY ECX
$U5480:4 = COPY EAX
STORE ram(R10), $U5480:4
BRANCH *[ram]0x140001058:8
CF = COPY 0:1
OF = COPY 0:1
$U5480:4 = LOAD ram(R10)
$U5480:4 = INT_AND $U5480:4, 0:4
STORE ram(R10), $U5480:4
$U5480:4 = LOAD ram(R10)
SF = INT_SLESS $U5480:4, 0:4
$U5480:4 = LOAD ram(R10)
ZF = INT_EQUAL $U5480:4, 0:4
$U5480:4 = LOAD ram(R10)
$U13480:4 = INT_AND $U5480:4, 0xff:4
$U13500:1 = POPCOUNT $U13480:4
$U13580:1 = INT_AND $U13500:1, 1:1
PF = INT_EQUAL $U13580:1, 0:1
$U3100:8 = INT_ADD R10, 40:8
$Uc300:8 = LOAD ram($U3100:8)
RAX = COPY $Uc300:8
CF = COPY 0:1
OF = COPY 0:1
$U56680:8 = INT_AND RAX, RAX
SF = INT_SLESS $U56680:8, 0:8
ZF = INT_EQUAL $U56680:8, 0:8
$U13480:8 = INT_AND $U56680:8, 0xff:8
$U13500:1 = POPCOUNT $U13480:8
$U13580:1 = INT_AND $U13500:1, 1:1
PF = INT_EQUAL $U13580:1, 0:1
CBRANCH *[ram]0x140001082:8, ZF
$U3100:8 = INT_ADD R10, 48:8
$Uc300:8 = LOAD ram($U3100:8)
RCX = COPY $Uc300:8
$U3800:8 = INT_ADD 48:8, RSP
$U5500:8 = COPY RCX
STORE ram($U3800:8), $U5500:8
$U3800:8 = INT_ADD 0x78:8, RSP
$Uc300:8 = LOAD ram($U3800:8)
RCX = COPY $Uc300:8
$U3800:8 = INT_ADD 40:8, RSP
$U5500:8 = COPY RCX
STORE ram($U3800:8), $U5500:8
RCX = COPY RBX
$U3800:8 = INT_ADD 32:8, RSP
$U5500:8 = COPY R11
STORE ram($U3800:8), $U5500:8
$U23e00:8 = COPY *[ram]0x140002270:8
RSP = INT_SUB RSP, 8:8
STORE ram(RSP), 0x140001082:8
CALLIND $U23e00:8
CF = INT_CARRY RSP, 64:8
OF = INT_SCARRY RSP, 64:8
RSP = INT_ADD RSP, 64:8
SF = INT_SLESS RSP, 0:8
ZF = INT_EQUAL RSP, 0:8
$U13480:8 = INT_AND RSP, 0xff:8
$U13500:1 = POPCOUNT $U13480:8
$U13580:1 = INT_AND $U13500:1, 1:1
PF = INT_EQUAL $U13580:1, 0:1
$U3c380:8 = COPY 0:8
$U3c380:8 = LOAD ram(RSP)
RSP = INT_ADD RSP, 8:8
RBX = COPY $U3c380:8
RIP = LOAD ram(RSP)
RSP = INT_ADD RSP, 8:8
RETURN RIP
$U34d80:8 = CALLOTHER "swi", 3:1
CALLIND $U34d80:8
RETURN 0:1
CF = INT_LESS RSP, 0x48:8
OF = INT_SBORROW RSP, 0x48:8
RSP = INT_SUB RSP, 0x48:8
SF = INT_SLESS RSP, 0:8
ZF = INT_EQUAL RSP, 0:8
$U13480:8 = INT_AND RSP, 0xff:8
$U13500:1 = POPCOUNT $U13480:8
$U13580:1 = INT_AND $U13500:1, 1:1
PF = INT_EQUAL $U13580:1, 0:1
$Uc080:1 = LOAD ram(RDX)
EAX = INT_ZEXT $Uc080:1
RAX = INT_ZEXT EAX
$U3100:8 = INT_ADD RDX, 1:8
R10 = COPY $U3100:8
$U3800:8 = INT_ADD 0x78:8, RSP
$Uc300:8 = LOAD ram($U3800:8)
RDX = COPY $Uc300:8
R11 = COPY RCX
$U50680:4 = INT_AND 24:4, 31:4
$U50700:4 = COPY EAX
EAX = INT_LEFT EAX, $U50680:4
RAX = INT_ZEXT EAX
$U15880:1 = INT_NOTEQUAL $U50680:4, 0:4
$U15900:4 = INT_SUB $U50680:4, 1:4
$U15980:4 = INT_LEFT $U50700:4, $U15900:4
$U15a80:1 = INT_SLESS $U15980:4, 0:4
$U15b00:1 = BOOL_NEGATE $U15880:1
$U15b80:1 = INT_AND $U15b00:1, CF
$U15c00:1 = INT_AND $U15880:1, $U15a80:1
CF = INT_OR $U15b80:1, $U15c00:1
$U15d80:1 = INT_EQUAL $U50680:4, 1:4
$U15e00:1 = INT_SLESS EAX, 0:4
$U15f00:1 = INT_XOR CF, $U15e00:1
$U15f80:1 = BOOL_NEGATE $U15d80:1
$U16000:1 = INT_AND $U15f80:1, OF
$U16080:1 = INT_AND $U15d80:1, $U15f00:1
OF = INT_OR $U16000:1, $U16080:1
$U13700:1 = INT_NOTEQUAL $U50680:4, 0:4
$U13800:1 = INT_SLESS EAX, 0:4
$U13880:1 = BOOL_NEGATE $U13700:1
$U13900:1 = INT_AND $U13880:1, SF
$U13980:1 = INT_AND $U13700:1, $U13800:1
SF = INT_OR $U13900:1, $U13980:1
$U13b00:1 = INT_EQUAL EAX, 0:4
$U13b80:1 = BOOL_NEGATE $U13700:1
$U13c00:1 = INT_AND $U13b80:1, ZF
$U13c80:1 = INT_AND $U13700:1, $U13b00:1
ZF = INT_OR $U13c00:1, $U13c80:1
$U3800:8 = INT_ADD 48:8, RSP
$U5480:4 = COPY EAX
STORE ram($U3800:8), $U5480:4
$Uc180:2 = LOAD ram(R10)
EAX = INT_ZEXT $Uc180:2
RAX = INT_ZEXT EAX
$U3800:8 = INT_ADD 52:8, RSP
$U5480:4 = COPY EAX
STORE ram($U3800:8), $U5480:4
$U3100:8 = INT_ADD R10, 2:8
$Uc300:8 = LOAD ram($U3100:8)
RAX = COPY $Uc300:8
CF = INT_CARRY R10, 10:8
OF = INT_SCARRY R10, 10:8
R10 = INT_ADD R10, 10:8
SF = INT_SLESS R10, 0:8
ZF = INT_EQUAL R10, 0:8
$U13480:8 = INT_AND R10, 0xff:8
$U13500:1 = POPCOUNT $U13480:8
$U13580:1 = INT_AND $U13500:1, 1:1
PF = INT_EQUAL $U13580:1, 0:1
$U3800:8 = INT_ADD 56:8, RSP
$U5500:8 = COPY RAX
STORE ram($U3800:8), $U5500:8
$U3100:8 = INT_ADD RCX, 8:8
$Uc300:8 = LOAD ram($U3100:8)
RAX = COPY $Uc300:8
$U5500:8 = COPY RAX
STORE ram(RDX), $U5500:8
$U3100:8 = INT_ADD RCX, 8:8
$Uc300:8 = LOAD ram($U3100:8)
RAX = COPY $Uc300:8
$U3800:8 = INT_ADD 40:8, RSP
$U5500:8 = COPY RDX
STORE ram($U3800:8), $U5500:8
$Uc180:2 = LOAD ram(RAX)
ECX = INT_ZEXT $Uc180:2
RCX = INT_ZEXT ECX
$U3100:8 = INT_ADD RDX, 8:8
$U5480:4 = COPY ECX
STORE ram($U3100:8), $U5480:4
RCX = COPY 0x140002378:8
$U3100:8 = INT_ADD RDX, 12:8
$U5800:4 = COPY 2:4
STORE ram($U3100:8), $U5800:4
$U3100:8 = INT_ADD RDX, 16:8
$U5500:8 = COPY R10
STORE ram($U3100:8), $U5500:8
$Uc180:2 = LOAD ram(R10)
EAX = INT_ZEXT $Uc180:2
RAX = INT_ZEXT EAX
$U3100:8 = INT_ADD RDX, 24:8
$U5480:4 = COPY EAX
STORE ram($U3100:8), $U5480:4
RAX = COPY 0x1400023f8:8
CF = INT_LESS EAX, ECX
OF = INT_SBORROW EAX, ECX
EAX = INT_SUB EAX, ECX
RAX = INT_ZEXT EAX
SF = INT_SLESS EAX, 0:4
ZF = INT_EQUAL EAX, 0:4
$U13480:4 = INT_AND EAX, 0xff:4
$U13500:1 = POPCOUNT $U13480:4
$U13580:1 = INT_AND $U13500:1, 1:1
PF = INT_EQUAL $U13580:1, 0:1
$U3100:8 = INT_ADD RDX, 28:8
$U5800:4 = COPY 1:4
STORE ram($U3100:8), $U5800:4
$U3100:8 = INT_ADD R11, 32:8
$Uc300:8 = LOAD ram($U3100:8)
RCX = COPY $Uc300:8
$U3800:8 = INT_ADD 48:8, RSP
RDX = COPY $U3800:8
$U3800:8 = INT_ADD 0x78:8, RSP
$U5480:4 = COPY EAX
STORE ram($U3800:8), $U5480:4
$U3800:8 = INT_ADD 0x70:8, RSP
$Uc200:4 = LOAD ram($U3800:8)
EAX = COPY $Uc200:4
RAX = INT_ZEXT EAX
$U3800:8 = INT_ADD 32:8, RSP
$U5480:4 = COPY EAX
STORE ram($U3800:8), $U5480:4
$U23e00:8 = COPY *[ram]0x140002130:8
RSP = INT_SUB RSP, 8:8
STORE ram(RSP), 0x14000111a:8
CALLIND $U23e00:8
$U3a80:8 = INT_MULT RAX, 1:8
$U3b80:8 = INT_ADD RAX, $U3a80:8
CF = INT_CARRY RSP, 0x48:8
OF = INT_SCARRY RSP, 0x48:8
RSP = INT_ADD RSP, 0x48:8
SF = INT_SLESS RSP, 0:8
ZF = INT_EQUAL RSP, 0:8
$U13480:8 = INT_AND RSP, 0xff:8
$U13500:1 = POPCOUNT $U13480:8
$U13580:1 = INT_AND $U13500:1, 1:1
PF = INT_EQUAL $U13580:1, 0:1
RIP = LOAD ram(RSP)
RSP = INT_ADD RSP, 8:8
RETURN RIP
$U34d80:8 = CALLOTHER "swi", 3:1
CALLIND $U34d80:8
RETURN 0:1
CF = INT_LESS RSP, 0x88:8
OF = INT_SBORROW RSP, 0x88:8
RSP = INT_SUB RSP, 0x88:8
SF = INT_SLESS RSP, 0:8
ZF = INT_EQUAL RSP, 0:8
$U13480:8 = INT_AND RSP, 0xff:8
$U13500:1 = POPCOUNT $U13480:8
$U13580:1 = INT_AND $U13500:1, 1:1
PF = INT_EQUAL $U13580:1, 0:1
RAX = COPY *[ram]0x140003040:8
CF = COPY 0:1
OF = COPY 0:1
RAX = INT_XOR RAX, RSP
SF = INT_SLESS RAX, 0:8
ZF = INT_EQUAL RAX, 0:8
$U13480:8 = INT_AND RAX, 0xff:8
$U13500:1 = POPCOUNT $U13480:8
$U13580:1 = INT_AND $U13500:1, 1:1
PF = INT_EQUAL $U13580:1, 0:1
$U3800:8 = INT_ADD 0x70:8, RSP
$U5500:8 = COPY RAX
STORE ram($U3800:8), $U5500:8
RAX = COPY *[ram]0x140003008:8
R9 = COPY 0x140003020:8
XMM1_Da = INT_XOR XMM1_Da, XMM1_Da
XMM1_Db = INT_XOR XMM1_Db, XMM1_Db
XMM1_Dc = INT_XOR XMM1_Dc, XMM1_Dc
XMM1_Dd = INT_XOR XMM1_Dd, XMM1_Dd
R8 = COPY 0x140003000:8
RDX = COPY 0x140001010:8
$U3800:8 = INT_ADD 48:8, RSP
RCX = COPY $U3800:8
$U3100:8 = INT_ADD RAX, -16:8
$U5580:16 = LOAD ram($U3100:8)
$U74d00:16 = COPY $U5580:16
XMM0_Da = SUBPIECE $U74d00:16, 0:4
XMM0_Db = SUBPIECE $U74d00:16, 4:4
XMM0_Dc = SUBPIECE $U74d00:16, 8:4
XMM0_Dd = SUBPIECE $U74d00:16, 12:4
*[ram]0x140003028:16 = COPY XMM1
$U3800:8 = INT_ADD 48:8, RSP
$U5580:16 = COPY XMM0
STORE ram($U3800:8), $U5580:16
$U23e00:8 = COPY *[ram]0x140002138:8
RSP = INT_SUB RSP, 8:8
STORE ram(RSP), 0x14000118f:8
CALLIND $U23e00:8
$U3a80:8 = INT_MULT RAX, 1:8
$U3b80:8 = INT_ADD RAX, $U3a80:8
CF = COPY 0:1
OF = COPY 0:1
$U56580:4 = INT_AND EAX, EAX
SF = INT_SLESS $U56580:4, 0:4
ZF = INT_EQUAL $U56580:4, 0:4
$U13480:4 = INT_AND $U56580:4, 0xff:4
$U13500:1 = POPCOUNT $U13480:4
$U13580:1 = INT_AND $U13500:1, 1:1
PF = INT_EQUAL $U13580:1, 0:1
$Ucc00:1 = BOOL_NEGATE ZF
CBRANCH *[ram]0x1400011b9:8, $Ucc00:1
R8 = COPY *[ram]0x140003008:8
$U3100:8 = INT_ADD RAX, 2:8
EDX = SUBPIECE $U3100:8, 0:4
RDX = INT_ZEXT EDX
RCX = COPY *[ram]0x140003020:8
$Uc180:2 = LOAD ram(R8)
R9D = INT_ZEXT $Uc180:2
R9 = INT_ZEXT R9D
$U23e00:8 = COPY *[ram]0x140002128:8
RSP = INT_SUB RSP, 8:8
STORE ram(RSP), 0x1400011b4:8
CALLIND $U23e00:8
$U3a80:8 = INT_MULT RAX, 1:8
$U3b80:8 = INT_ADD RAX, $U3a80:8
$U25a00:4 = COPY *[ram]0x140003000:4
CF = INT_LESS $U25a00:4, 5:4
OF = INT_SBORROW $U25a00:4, 5:4
$U25b00:4 = INT_SUB $U25a00:4, 5:4
SF = INT_SLESS $U25b00:4, 0:4
ZF = INT_EQUAL $U25b00:4, 0:4
$U13480:4 = INT_AND $U25b00:4, 0xff:4
$U13500:1 = POPCOUNT $U13480:4
$U13580:1 = INT_AND $U13500:1, 1:1
PF = INT_EQUAL $U13580:1, 0:1
$Ucd00:1 = BOOL_OR CF, ZF
CBRANCH *[ram]0x14000122c:8, $Ucd00:1
RCX = COPY 0x2000000000000:8
CF = COPY 0:1
OF = COPY 0:1
$U56680:8 = INT_AND *[ram]0x140003010:8, RCX
SF = INT_SLESS $U56680:8, 0:8
ZF = INT_EQUAL $U56680:8, 0:8
$U13480:8 = INT_AND $U56680:8, 0xff:8
$U13500:1 = POPCOUNT $U13480:8
$U13580:1 = INT_AND $U13500:1, 1:1
PF = INT_EQUAL $U13580:1, 0:1
CBRANCH *[ram]0x14000122c:8, ZF
RAX = COPY *[ram]0x140003018:8
CF = COPY 0:1
OF = COPY 0:1
RAX = INT_AND RAX, RCX
SF = INT_SLESS RAX, 0:8
ZF = INT_EQUAL RAX, 0:8
$U13480:8 = INT_AND RAX, 0xff:8
$U13500:1 = POPCOUNT $U13480:8
$U13580:1 = INT_AND $U13500:1, 1:1
PF = INT_EQUAL $U13580:1, 0:1
$U26900:8 = COPY *[ram]0x140003018:8
CF = INT_LESS RAX, $U26900:8
OF = INT_SBORROW RAX, $U26900:8
$U26a00:8 = INT_SUB RAX, $U26900:8
SF = INT_SLESS $U26a00:8, 0:8
ZF = INT_EQUAL $U26a00:8, 0:8
$U13480:8 = INT_AND $U26a00:8, 0xff:8
$U13500:1 = POPCOUNT $U13480:8
$U13580:1 = INT_AND $U13500:1, 1:1
PF = INT_EQUAL $U13580:1, 0:1
$Ucc00:1 = BOOL_NEGATE ZF
CBRANCH *[ram]0x14000122c:8, $Ucc00:1
$U3800:8 = INT_ADD 0x6c:8, RSP
CF = COPY 0:1
OF = COPY 0:1
$U5480:4 = LOAD ram($U3800:8)
$U5480:4 = INT_AND $U5480:4, 0:4
STORE ram($U3800:8), $U5480:4
$U5480:4 = LOAD ram($U3800:8)
SF = INT_SLESS $U5480:4, 0:4
$U5480:4 = LOAD ram($U3800:8)
ZF = INT_EQUAL $U5480:4, 0:4
$U5480:4 = LOAD ram($U3800:8)
$U13480:4 = INT_AND $U5480:4, 0xff:4
$U13500:1 = POPCOUNT $U13480:4
$U13580:1 = INT_AND $U13500:1, 1:1
PF = INT_EQUAL $U13580:1, 0:1
RAX = COPY 0x1400022e0:8
$U3800:8 = INT_ADD 0x60:8, RSP
$U5500:8 = COPY RAX
STORE ram($U3800:8), $U5500:8
RDX = COPY 0x140002389:8
$U3800:8 = INT_ADD 64:8, RSP
RAX = COPY $U3800:8
$U3800:8 = INT_ADD 0x68:8, RSP
$U5800:4 = COPY 18:4
STORE ram($U3800:8), $U5800:4
$U3800:8 = INT_ADD 40:8, RSP
$U5500:8 = COPY RAX
STORE ram($U3800:8), $U5500:8
RCX = COPY 0x140003000:8
CF = COPY 0:1
OF = COPY 0:1
R9D = INT_XOR R9D, R9D
R9 = INT_ZEXT R9D
SF = INT_SLESS R9D, 0:4
ZF = INT_EQUAL R9D, 0:4
$U13480:4 = INT_AND R9D, 0xff:4
$U13500:1 = POPCOUNT $U13480:4
$U13580:1 = INT_AND $U13500:1, 1:1
PF = INT_EQUAL $U13580:1, 0:1
$U3800:8 = INT_ADD 32:8, RSP
$U5800:4 = COPY 3:4
STORE ram($U3800:8), $U5800:4
CF = COPY 0:1
OF = COPY 0:1
R8D = INT_XOR R8D, R8D
R8 = INT_ZEXT R8D
SF = INT_SLESS R8D, 0:4
ZF = INT_EQUAL R8D, 0:4
$U13480:4 = INT_AND R8D, 0xff:4
$U13500:1 = POPCOUNT $U13480:4
$U13580:1 = INT_AND $U13500:1, 1:1
PF = INT_EQUAL $U13580:1, 0:1
RSP = INT_SUB RSP, 8:8
STORE ram(RSP), 0x14000122c:8
CALL *[ram]0x140001090:8
$U3800:8 = INT_ADD 40:8, RSP
$U5800:4 = COPY 1:4
STORE ram($U3800:8), $U5800:4
R8 = COPY 0x1400022f8:8
$U3800:8 = INT_ADD 32:8, RSP
CF = COPY 0:1
OF = COPY 0:1
$U5500:8 = LOAD ram($U3800:8)
$U5500:8 = INT_AND $U5500:8, 0:8
STORE ram($U3800:8), $U5500:8
$U5500:8 = LOAD ram($U3800:8)
SF = INT_SLESS $U5500:8, 0:8
$U5500:8 = LOAD ram($U3800:8)
ZF = INT_EQUAL $U5500:8, 0:8
$U5500:8 = LOAD ram($U3800:8)
$U13480:8 = INT_AND $U5500:8, 0xff:8
$U13500:1 = POPCOUNT $U13480:8
$U13580:1 = INT_AND $U13500:1, 1:1
PF = INT_EQUAL $U13580:1, 0:1
CF = COPY 0:1
OF = COPY 0:1
R9D = INT_XOR R9D, R9D
R9 = INT_ZEXT R9D
SF = INT_SLESS R9D, 0:4
ZF = INT_EQUAL R9D, 0:4
$U13480:4 = INT_AND R9D, 0xff:4
$U13500:1 = POPCOUNT $U13480:4
$U13580:1 = INT_AND $U13500:1, 1:1
PF = INT_EQUAL $U13580:1, 0:1
CF = COPY 0:1
OF = COPY 0:1
EDX = INT_XOR EDX, EDX
RDX = INT_ZEXT EDX
SF = INT_SLESS EDX, 0:4
ZF = INT_EQUAL EDX, 0:4
$U13480:4 = INT_AND EDX, 0xff:4
$U13500:1 = POPCOUNT $U13480:4
$U13580:1 = INT_AND $U13500:1, 1:1
PF = INT_EQUAL $U13580:1, 0:1
CF = COPY 0:1
OF = COPY 0:1
ECX = INT_XOR ECX, ECX
RCX = INT_ZEXT ECX
SF = INT_SLESS ECX, 0:4
ZF = INT_EQUAL ECX, 0:4
$U13480:4 = INT_AND ECX, 0xff:4
$U13500:1 = POPCOUNT $U13480:4
$U13580:1 = INT_AND $U13500:1, 1:1
PF = INT_EQUAL $U13580:1, 0:1
$U23e00:8 = COPY *[ram]0x1400021b0:8
RSP = INT_SUB RSP, 8:8
STORE ram(RSP), 0x14000124f:8
CALLIND $U23e00:8
$U3a80:8 = INT_MULT RAX, 1:8
$U3b80:8 = INT_ADD RAX, $U3a80:8
CF = COPY 0:1
OF = COPY 0:1
EAX = INT_XOR EAX, EAX
RAX = INT_ZEXT EAX
SF = INT_SLESS EAX, 0:4
ZF = INT_EQUAL EAX, 0:4
$U13480:4 = INT_AND EAX, 0xff:4
$U13500:1 = POPCOUNT $U13480:4
$U13580:1 = INT_AND $U13500:1, 1:1
PF = INT_EQUAL $U13580:1, 0:1
$U3800:8 = INT_ADD 0x70:8, RSP
$Uc300:8 = LOAD ram($U3800:8)
RCX = COPY $Uc300:8
CF = COPY 0:1
OF = COPY 0:1
RCX = INT_XOR RCX, RSP
SF = INT_SLESS RCX, 0:8
ZF = INT_EQUAL RCX, 0:8
$U13480:8 = INT_AND RCX, 0xff:8
$U13500:1 = POPCOUNT $U13480:8
$U13580:1 = INT_AND $U13500:1, 1:1
PF = INT_EQUAL $U13580:1, 0:1
RSP = INT_SUB RSP, 8:8
STORE ram(RSP), 0x140001263:8
CALL *[ram]0x140001280:8
CF = INT_CARRY RSP, 0x88:8
OF = INT_SCARRY RSP, 0x88:8
RSP = INT_ADD RSP, 0x88:8
SF = INT_SLESS RSP, 0:8
ZF = INT_EQUAL RSP, 0:8
$U13480:8 = INT_AND RSP, 0xff:8
$U13500:1 = POPCOUNT $U13480:8
$U13580:1 = INT_AND $U13500:1, 1:1
PF = INT_EQUAL $U13580:1, 0:1
RIP = LOAD ram(RSP)
RSP = INT_ADD RSP, 8:8
RETURN RIP
$U34d80:8 = CALLOTHER "swi", 3:1
CALLIND $U34d80:8
RETURN 0:1
$U26900:8 = COPY *[ram]0x140003040:8
CF = INT_LESS RCX, $U26900:8
OF = INT_SBORROW RCX, $U26900:8
$U26a00:8 = INT_SUB RCX, $U26900:8
SF = INT_SLESS $U26a00:8, 0:8
ZF = INT_EQUAL $U26a00:8, 0:8
$U13480:8 = INT_AND $U26a00:8, 0xff:8
$U13500:1 = POPCOUNT $U13480:8
$U13580:1 = INT_AND $U13500:1, 1:1
PF = INT_EQUAL $U13580:1, 0:1
$Ucc00:1 = BOOL_NEGATE ZF
CBRANCH *[ram]0x140001299:8, $Ucc00:1
$U4a400:4 = INT_AND 16:4, 63:4
$U4a480:8 = INT_LEFT RCX, $U4a400:4
$U4a500:4 = INT_SUB 64:4, $U4a400:4
$U4a580:8 = INT_RIGHT RCX, $U4a500:4
RCX = INT_OR $U4a480:8, $U4a580:8
$U14600:1 = INT_NOTEQUAL $U4a400:4, 0:4
$U14680:8 = INT_AND RCX, 1:8
$U14780:1 = INT_NOTEQUAL $U14680:8, 0:8
$U14800:1 = BOOL_NEGATE $U14600:1
$U14880:1 = INT_AND $U14800:1, CF
$U14900:1 = INT_AND $U14600:1, $U14780:1
CF = INT_OR $U14880:1, $U14900:1
$U14a80:1 = INT_EQUAL $U4a400:4, 1:4
$U14b00:1 = INT_SLESS RCX, 0:8
$U14c00:1 = INT_XOR CF, $U14b00:1
$U14c80:1 = BOOL_NEGATE $U14a80:1
$U14d00:1 = INT_AND $U14c80:1, OF
$U14d80:1 = INT_AND $U14a80:1, $U14c00:1
OF = INT_OR $U14d00:1, $U14d80:1
CF = COPY 0:1
OF = COPY 0:1
$U56080:2 = INT_AND CX, 0xffff:2
SF = INT_SLESS $U56080:2, 0:2
ZF = INT_EQUAL $U56080:2, 0:2
$U13480:2 = INT_AND $U56080:2, 0xff:2
$U13500:1 = POPCOUNT $U13480:2
$U13580:1 = INT_AND $U13500:1, 1:1
PF = INT_EQUAL $U13580:1, 0:1
$Ucc00:1 = BOOL_NEGATE ZF
CBRANCH *[ram]0x140001295:8, $Ucc00:1
RIP = LOAD ram(RSP)
RSP = INT_ADD RSP, 8:8
RETURN RIP
$U4d200:4 = INT_AND 16:4, 63:4
$U4d280:8 = INT_RIGHT RCX, $U4d200:4
$U4d300:4 = INT_SUB 64:4, $U4d200:4
$U4d380:8 = INT_LEFT RCX, $U4d300:4
RCX = INT_OR $U4d280:8, $U4d380:8
$U14f00:1 = INT_NOTEQUAL $U4d200:4, 0:4
$U15000:1 = INT_SLESS RCX, 0:8
$U15080:1 = BOOL_NEGATE $U14f00:1
$U15100:1 = INT_AND $U15080:1, CF
$U15180:1 = INT_AND $U14f00:1, $U15000:1
CF = INT_OR $U15100:1, $U15180:1
$U15300:1 = INT_EQUAL $U4d200:4, 1:4
$U15380:1 = INT_SLESS RCX, 0:8
$U15400:8 = INT_LEFT RCX, 1:4
$U15480:1 = INT_SLESS $U15400:8, 0:8
$U15580:1 = INT_XOR $U15380:1, $U15480:1
$U15600:1 = BOOL_NEGATE $U15300:1
$U15680:1 = INT_AND $U15600:1, OF
$U15700:1 = INT_AND $U15300:1, $U15580:1
OF = INT_OR $U15680:1, $U15700:1
CALL *[ram]0x140001380:8
RETURN 0:8
$U34d80:8 = CALLOTHER "swi", 3:1
CALLIND $U34d80:8
RETURN 0:1
$U3800:8 = INT_ADD 32:8, RSP
$U5500:8 = COPY RBX
STORE ram($U3800:8), $U5500:8
$Uf000:8 = COPY RBP
RSP = INT_SUB RSP, 8:8
STORE ram(RSP), $Uf000:8
RBP = COPY RSP
CF = INT_LESS RSP, 32:8
OF = INT_SBORROW RSP, 32:8
RSP = INT_SUB RSP, 32:8
SF = INT_SLESS RSP, 0:8
ZF = INT_EQUAL RSP, 0:8
$U13480:8 = INT_AND RSP, 0xff:8
$U13500:1 = POPCOUNT $U13480:8
$U13580:1 = INT_AND $U13500:1, 1:1
PF = INT_EQUAL $U13580:1, 0:1
$U3100:8 = INT_ADD RBP, 24:8
CF = COPY 0:1
OF = COPY 0:1
$U5500:8 = LOAD ram($U3100:8)
$U5500:8 = INT_AND $U5500:8, 0:8
STORE ram($U3100:8), $U5500:8
$U5500:8 = LOAD ram($U3100:8)
SF = INT_SLESS $U5500:8, 0:8
$U5500:8 = LOAD ram($U3100:8)
ZF = INT_EQUAL $U5500:8, 0:8
$U5500:8 = LOAD ram($U3100:8)
$U13480:8 = INT_AND $U5500:8, 0xff:8
$U13500:1 = POPCOUNT $U13480:8
$U13580:1 = INT_AND $U13500:1, 1:1
PF = INT_EQUAL $U13580:1, 0:1
RBX = COPY 0x2b992ddfa232:8
RCX = COPY *[ram]0x140003040:8
CF = COPY 0:1
OF = COPY 0:1
$U56680:8 = INT_AND RCX, RCX
SF = INT_SLESS $U56680:8, 0:8
ZF = INT_EQUAL $U56680:8, 0:8
$U13480:8 = INT_AND $U56680:8, 0xff:8
$U13500:1 = POPCOUNT $U13480:8
$U13580:1 = INT_AND $U13500:1, 1:1
PF = INT_EQUAL $U13580:1, 0:1
CBRANCH *[ram]0x1400012d5:8, ZF
$U26900:8 = COPY RBX
CF = INT_LESS RCX, $U26900:8
OF = INT_SBORROW RCX, $U26900:8
$U26a00:8 = INT_SUB RCX, $U26900:8
SF = INT_SLESS $U26a00:8, 0:8
ZF = INT_EQUAL $U26a00:8, 0:8
$U13480:8 = INT_AND $U26a00:8, 0xff:8
$U13500:1 = POPCOUNT $U13480:8
$U13580:1 = INT_AND $U13500:1, 1:1
PF = INT_EQUAL $U13580:1, 0:1
$Ucc00:1 = BOOL_NEGATE ZF
CBRANCH *[ram]0x14000135a:8, $Ucc00:1
$U3100:8 = INT_ADD RBP, 32:8
RCX = COPY $U3100:8
$U23e00:8 = COPY *[ram]0x140002150:8
RSP = INT_SUB RSP, 8:8
STORE ram(RSP), 0x1400012df:8
CALLIND $U23e00:8
$U3100:8 = INT_ADD RBP, 32:8
$Uc300:8 = LOAD ram($U3100:8)
RAX = COPY $Uc300:8
$U3100:8 = INT_ADD RBP, 16:8
$U5500:8 = COPY RAX
STORE ram($U3100:8), $U5500:8
$U23e00:8 = COPY *[ram]0x140002168:8
RSP = INT_SUB RSP, 8:8
STORE ram(RSP), 0x1400012ed:8
CALLIND $U23e00:8
EAX = COPY EAX
RAX = INT_ZEXT EAX
$U3100:8 = INT_ADD RBP, 16:8
CF = COPY 0:1
OF = COPY 0:1
$U5500:8 = LOAD ram($U3100:8)
$U5500:8 = INT_XOR $U5500:8, RAX
STORE ram($U3100:8), $U5500:8
$U5500:8 = LOAD ram($U3100:8)
SF = INT_SLESS $U5500:8, 0:8
$U5500:8 = LOAD ram($U3100:8)
ZF = INT_EQUAL $U5500:8, 0:8
$U5500:8 = LOAD ram($U3100:8)
$U13480:8 = INT_AND $U5500:8, 0xff:8
$U13500:1 = POPCOUNT $U13480:8
$U13580:1 = INT_AND $U13500:1, 1:1
PF = INT_EQUAL $U13580:1, 0:1
$U23e00:8 = COPY *[ram]0x140002148:8
RSP = INT_SUB RSP, 8:8
STORE ram(RSP), 0x1400012f9:8
CALLIND $U23e00:8
EAX = COPY EAX
RAX = INT_ZEXT EAX
$U3100:8 = INT_ADD RBP, 16:8
CF = COPY 0:1
OF = COPY 0:1
$U5500:8 = LOAD ram($U3100:8)
$U5500:8 = INT_XOR $U5500:8, RAX
STORE ram($U3100:8), $U5500:8
$U5500:8 = LOAD ram($U3100:8)
SF = INT_SLESS $U5500:8, 0:8
$U5500:8 = LOAD ram($U3100:8)
ZF = INT_EQUAL $U5500:8, 0:8
$U5500:8 = LOAD ram($U3100:8)
$U13480:8 = INT_AND $U5500:8, 0xff:8
$U13500:1 = POPCOUNT $U13480:8
$U13580:1 = INT_AND $U13500:1, 1:1
PF = INT_EQUAL $U13580:1, 0:1
$U23e00:8 = COPY *[ram]0x140002158:8
RSP = INT_SUB RSP, 8:8
STORE ram(RSP), 0x140001305:8
CALLIND $U23e00:8
EAX = COPY EAX
RAX = INT_ZEXT EAX
$U50c80:4 = INT_AND 24:4, 63:4
$U50d00:8 = COPY RAX
RAX = INT_LEFT RAX, $U50c80:4
$U15880:1 = INT_NOTEQUAL $U50c80:4, 0:4
$U15900:4 = INT_SUB $U50c80:4, 1:4
$U15980:8 = INT_LEFT $U50d00:8, $U15900:4
$U15a80:1 = INT_SLESS $U15980:8, 0:8
$U15b00:1 = BOOL_NEGATE $U15880:1
$U15b80:1 = INT_AND $U15b00:1, CF
$U15c00:1 = INT_AND $U15880:1, $U15a80:1
CF = INT_OR $U15b80:1, $U15c00:1
$U15d80:1 = INT_EQUAL $U50c80:4, 1:4
$U15e00:1 = INT_SLESS RAX, 0:8
$U15f00:1 = INT_XOR CF, $U15e00:1
$U15f80:1 = BOOL_NEGATE $U15d80:1
$U16000:1 = INT_AND $U15f80:1, OF
$U16080:1 = INT_AND $U15d80:1, $U15f00:1
OF = INT_OR $U16000:1, $U16080:1
$U13700:1 = INT_NOTEQUAL $U50c80:4, 0:4
$U13800:1 = INT_SLESS RAX, 0:8
$U13880:1 = BOOL_NEGATE $U13700:1
$U13900:1 = INT_AND $U13880:1, SF
$U13980:1 = INT_AND $U13700:1, $U13800:1
SF = INT_OR $U13900:1, $U13980:1
$U13b00:1 = INT_EQUAL RAX, 0:8
$U13b80:1 = BOOL_NEGATE $U13700:1
$U13c00:1 = INT_AND $U13b80:1, ZF
$U13c80:1 = INT_AND $U13700:1, $U13b00:1
ZF = INT_OR $U13c00:1, $U13c80:1
$U13d80:8 = INT_AND RAX, 0xff:8
$U3100:8 = INT_ADD RBP, 16:8
CF = COPY 0:1
OF = COPY 0:1
$U5500:8 = LOAD ram($U3100:8)
$U5500:8 = INT_XOR $U5500:8, RAX
STORE ram($U3100:8), $U5500:8
$U5500:8 = LOAD ram($U3100:8)
SF = INT_SLESS $U5500:8, 0:8
$U5500:8 = LOAD ram($U3100:8)
ZF = INT_EQUAL $U5500:8, 0:8
$U5500:8 = LOAD ram($U3100:8)
$U13480:8 = INT_AND $U5500:8, 0xff:8
$U13500:1 = POPCOUNT $U13480:8
$U13580:1 = INT_AND $U13500:1, 1:1
PF = INT_EQUAL $U13580:1, 0:1
$U23e00:8 = COPY *[ram]0x140002158:8
RSP = INT_SUB RSP, 8:8
STORE ram(RSP), 0x140001315:8
CALLIND $U23e00:8
EAX = COPY EAX
RAX = INT_ZEXT EAX
$U3100:8 = INT_ADD RBP, 16:8
RCX = COPY $U3100:8
$U3100:8 = INT_ADD RBP, 16:8
CF = COPY 0:1
OF = COPY 0:1
$Uc300:8 = LOAD ram($U3100:8)
RAX = INT_XOR RAX, $Uc300:8
SF = INT_SLESS RAX, 0:8
ZF = INT_EQUAL RAX, 0:8
$U13480:8 = INT_AND RAX, 0xff:8
$U13500:1 = POPCOUNT $U13480:8
$U13580:1 = INT_AND $U13500:1, 1:1
PF = INT_EQUAL $U13580:1, 0:1
CF = COPY 0:1
OF = COPY 0:1
RAX = INT_XOR RAX, RCX
SF = INT_SLESS RAX, 0:8
ZF = INT_EQUAL RAX, 0:8
$U13480:8 = INT_AND RAX, 0xff:8
$U13500:1 = POPCOUNT $U13480:8
$U13580:1 = INT_AND $U13500:1, 1:1
PF = INT_EQUAL $U13580:1, 0:1
$U3100:8 = INT_ADD RBP, 24:8
RCX = COPY $U3100:8
$U3100:8 = INT_ADD RBP, 16:8
$U5500:8 = COPY RAX
STORE ram($U3100:8), $U5500:8
$U23e00:8 = COPY *[ram]0x140002198:8
RSP = INT_SUB RSP, 8:8
STORE ram(RSP), 0x140001330:8
CALLIND $U23e00:8
$U3100:8 = INT_ADD RBP, 24:8
$Uc200:4 = LOAD ram($U3100:8)
EAX = COPY $Uc200:4
RAX = INT_ZEXT EAX
RCX = COPY 0xffffffffffff:8
$U50c80:4 = INT_AND 32:4, 63:4
$U50d00:8 = COPY RAX
RAX = INT_LEFT RAX, $U50c80:4
$U15880:1 = INT_NOTEQUAL $U50c80:4, 0:4
$U15900:4 = INT_SUB $U50c80:4, 1:4
$U15980:8 = INT_LEFT $U50d00:8, $U15900:4
$U15a80:1 = INT_SLESS $U15980:8, 0:8
$U15b00:1 = BOOL_NEGATE $U15880:1
$U15b80:1 = INT_AND $U15b00:1, CF
$U15c00:1 = INT_AND $U15880:1, $U15a80:1
CF = INT_OR $U15b80:1, $U15c00:1
$U15d80:1 = INT_EQUAL $U50c80:4, 1:4
$U15e00:1 = INT_SLESS RAX, 0:8
$U15f00:1 = INT_XOR CF, $U15e00:1
$U15f80:1 = BOOL_NEGATE $U15d80:1
$U16000:1 = INT_AND $U15f80:1, OF
$U16080:1 = INT_AND $U15d80:1, $U15f00:1
OF = INT_OR $U16000:1, $U16080:1
$U13700:1 = INT_NOTEQUAL $U50c80:4, 0:4
$U13800:1 = INT_SLESS RAX, 0:8
$U13880:1 = BOOL_NEGATE $U13700:1
$U13900:1 = INT_AND $U13880:1, SF
$U13980:1 = INT_AND $U13700:1, $U13800:1
SF = INT_OR $U13900:1, $U13980:1
$U13b00:1 = INT_EQUAL RAX, 0:8
$U13b80:1 = BOOL_NEGATE $U13700:1
$U13c00:1 = INT_AND $U13b80:1, ZF
$U13c80:1 = INT_AND $U13700:1, $U13b00:1
ZF = INT_OR $U13c00:1, $U13c80:1
$U13d80:8 = INT_AND RAX, 0xff:8
$U3100:8 = INT_ADD RBP, 16:8
CF = COPY 0:1
OF = COPY 0:1
$Uc300:8 = LOAD ram($U3100:8)
RAX = INT_XOR RAX, $Uc300:8
SF = INT_SLESS RAX, 0:8
ZF = INT_EQUAL RAX, 0:8
$U13480:8 = INT_AND RAX, 0xff:8
$U13500:1 = POPCOUNT $U13480:8
$U13580:1 = INT_AND $U13500:1, 1:1
PF = INT_EQUAL $U13580:1, 0:1
$U3100:8 = INT_ADD RBP, 24:8
CF = COPY 0:1
OF = COPY 0:1
$Uc300:8 = LOAD ram($U3100:8)
RAX = INT_XOR RAX, $Uc300:8
SF = INT_SLESS RAX, 0:8
ZF = INT_EQUAL RAX, 0:8
$U13480:8 = INT_AND RAX, 0xff:8
$U13500:1 = POPCOUNT $U13480:8
$U13580:1 = INT_AND $U13500:1, 1:1
PF = INT_EQUAL $U13580:1, 0:1
CF = COPY 0:1
OF = COPY 0:1
RAX = INT_AND RAX, RCX
SF = INT_SLESS RAX, 0:8
ZF = INT_EQUAL RAX, 0:8
$U13480:8 = INT_AND RAX, 0xff:8
$U13500:1 = POPCOUNT $U13480:8
$U13580:1 = INT_AND $U13500:1, 1:1
PF = INT_EQUAL $U13580:1, 0:1
RCX = COPY RBX
$Ucc00:1 = BOOL_NEGATE ZF
$U24e00:1 = BOOL_NEGATE $Ucc00:1
CBRANCH *[ram]0x140001353:8, $U24e00:1
RCX = COPY RAX
*[ram]0x140003040:8 = COPY RCX
$U3800:8 = INT_ADD 0x48:8, RSP
$Uc300:8 = LOAD ram($U3800:8)
RBX = COPY $Uc300:8
RCX = INT_NEGATE RCX
*[ram]0x140003048:8 = COPY RCX
CF = INT_CARRY RSP, 32:8
OF = INT_SCARRY RSP, 32:8
RSP = INT_ADD RSP, 32:8
SF = INT_SLESS RSP, 0:8
ZF = INT_EQUAL RSP, 0:8
$U13480:8 = INT_AND RSP, 0xff:8
$U13500:1 = POPCOUNT $U13480:8
$U13580:1 = INT_AND $U13500:1, 1:1
PF = INT_EQUAL $U13580:1, 0:1
$U3c380:8 = COPY 0:8
$U3c380:8 = LOAD ram(RSP)
RSP = INT_ADD RSP, 8:8
RBP = COPY $U3c380:8
RIP = LOAD ram(RSP)
RSP = INT_ADD RSP, 8:8
RETURN RIP
$U34d80:8 = CALLOTHER "swi", 3:1
CALLIND $U34d80:8
RETURN 0:1
$U3800:8 = INT_ADD 8:8, RSP
$U5500:8 = COPY RCX
STORE ram($U3800:8), $U5500:8
CF = INT_LESS RSP, 0x88:8
OF = INT_SBORROW RSP, 0x88:8
RSP = INT_SUB RSP, 0x88:8
SF = INT_SLESS RSP, 0:8
ZF = INT_EQUAL RSP, 0:8
$U13480:8 = INT_AND RSP, 0xff:8
$U13500:1 = POPCOUNT $U13480:8
$U13580:1 = INT_AND $U13500:1, 1:1
PF = INT_EQUAL $U13580:1, 0:1
RCX = COPY 0x140003100:8
$U23e00:8 = COPY *[ram]0x140002160:8
RSP = INT_SUB RSP, 8:8
STORE ram(RSP), 0x140001399:8
CALLIND $U23e00:8
RAX = COPY *[ram]0x1400031f8:8
$U3800:8 = INT_ADD 0x48:8, RSP
$U5500:8 = COPY RAX
STORE ram($U3800:8), $U5500:8
CF = COPY 0:1
OF = COPY 0:1
R8D = INT_XOR R8D, R8D
R8 = INT_ZEXT R8D
SF = INT_SLESS R8D, 0:4
ZF = INT_EQUAL R8D, 0:4
$U13480:4 = INT_AND R8D, 0xff:4
$U13500:1 = POPCOUNT $U13480:4
$U13580:1 = INT_AND $U13500:1, 1:1
PF = INT_EQUAL $U13580:1, 0:1
$U3800:8 = INT_ADD 0x50:8, RSP
RDX = COPY $U3800:8
$U3800:8 = INT_ADD 0x48:8, RSP
$Uc300:8 = LOAD ram($U3800:8)
RCX = COPY $Uc300:8
$U23e00:8 = COPY *[ram]0x1400021a0:8
RSP = INT_SUB RSP, 8:8
STORE ram(RSP), 0x1400013b8:8
CALLIND $U23e00:8
$U3800:8 = INT_ADD 64:8, RSP
$U5500:8 = COPY RAX
STORE ram($U3800:8), $U5500:8
$U3800:8 = INT_ADD 64:8, RSP
$Uc380:8 = LOAD ram($U3800:8)
$U25b80:8 = COPY $Uc380:8
CF = INT_LESS $U25b80:8, 0:8
OF = INT_SBORROW $U25b80:8, 0:8
$U25c80:8 = INT_SUB $U25b80:8, 0:8
SF = INT_SLESS $U25c80:8, 0:8
ZF = INT_EQUAL $U25c80:8, 0:8
$U13480:8 = INT_AND $U25c80:8, 0xff:8
$U13500:1 = POPCOUNT $U13480:8
$U13580:1 = INT_AND $U13500:1, 1:1
PF = INT_EQUAL $U13580:1, 0:1
CBRANCH *[ram]0x140001407:8, ZF
$U3800:8 = INT_ADD 56:8, RSP
$U5880:8 = COPY 0:8
STORE ram($U3800:8), $U5880:8
$U3800:8 = INT_ADD 0x58:8, RSP
RAX = COPY $U3800:8
$U3800:8 = INT_ADD 48:8, RSP
$U5500:8 = COPY RAX
STORE ram($U3800:8), $U5500:8
$U3800:8 = INT_ADD 0x60:8, RSP
RAX = COPY $U3800:8
$U3800:8 = INT_ADD 40:8, RSP
$U5500:8 = COPY RAX
STORE ram($U3800:8), $U5500:8
RAX = COPY 0x140003100:8
$U3800:8 = INT_ADD 32:8, RSP
$U5500:8 = COPY RAX
STORE ram($U3800:8), $U5500:8
$U3800:8 = INT_ADD 64:8, RSP
$Uc300:8 = LOAD ram($U3800:8)
R9 = COPY $Uc300:8
$U3800:8 = INT_ADD 0x48:8, RSP
$Uc300:8 = LOAD ram($U3800:8)
R8 = COPY $Uc300:8
$U3800:8 = INT_ADD 0x50:8, RSP
$Uc300:8 = LOAD ram($U3800:8)
RDX = COPY $Uc300:8
CF = COPY 0:1
OF = COPY 0:1
ECX = INT_XOR ECX, ECX
RCX = INT_ZEXT ECX
SF = INT_SLESS ECX, 0:4
ZF = INT_EQUAL ECX, 0:4
$U13480:4 = INT_AND ECX, 0xff:4
$U13500:1 = POPCOUNT $U13480:4
$U13580:1 = INT_AND $U13500:1, 1:1
PF = INT_EQUAL $U13580:1, 0:1
$U23e00:8 = COPY *[ram]0x140002170:8
RSP = INT_SUB RSP, 8:8
STORE ram(RSP), 0x140001405:8
CALLIND $U23e00:8
BRANCH *[ram]0x140001429:8
$U3c80:8 = INT_ADD 0x88:8, RSP
$Uc300:8 = LOAD ram($U3c80:8)
RAX = COPY $Uc300:8
*[ram]0x1400031f8:8 = COPY RAX
$U3c80:8 = INT_ADD 0x88:8, RSP
RAX = COPY $U3c80:8
CF = INT_CARRY RAX, 8:8
OF = INT_SCARRY RAX, 8:8
RAX = INT_ADD RAX, 8:8
SF = INT_SLESS RAX, 0:8
ZF = INT_EQUAL RAX, 0:8
$U13480:8 = INT_AND RAX, 0xff:8
$U13500:1 = POPCOUNT $U13480:8
$U13580:1 = INT_AND $U13500:1, 1:1
PF = INT_EQUAL $U13580:1, 0:1
*[ram]0x140003198:8 = COPY RAX
RAX = COPY *[ram]0x1400031f8:8
*[ram]0x140003070:8 = COPY RAX
$U3c80:8 = INT_ADD 0x90:8, RSP
$Uc300:8 = LOAD ram($U3c80:8)
RAX = COPY $Uc300:8
*[ram]0x140003180:8 = COPY RAX
*[ram]0x140003060:4 = COPY 0xc0000409:4
*[ram]0x140003064:4 = COPY 1:4
*[ram]0x140003078:4 = COPY 1:4
RAX = COPY 8:8
$U32e80:16 = INT_SEXT RAX
$U32f00:16 = INT_SEXT 0:8
$U33000:16 = INT_MULT $U32e80:16, $U32f00:16
RAX = INT_MULT RAX, 0:8
$U33180:8 = SUBPIECE $U33000:16, 8:4
$U14400:16 = INT_SEXT RAX
CF = INT_NOTEQUAL $U14400:16, $U33000:16
OF = COPY CF
RCX = COPY 0x140003080:8
$U3300:8 = INT_MULT RAX, 1:8
$U3400:8 = INT_ADD RCX, $U3300:8
$U5880:8 = COPY 2:8
STORE ram($U3400:8), $U5880:8
RAX = COPY *[ram]0x140003040:8
$U3800:8 = INT_ADD 0x68:8, RSP
$U5500:8 = COPY RAX
STORE ram($U3800:8), $U5500:8
RAX = COPY *[ram]0x140003048:8
$U3800:8 = INT_ADD 0x70:8, RSP
$U5500:8 = COPY RAX
STORE ram($U3800:8), $U5500:8
CF = COPY 0:1
OF = COPY 0:1
ECX = INT_XOR ECX, ECX
RCX = INT_ZEXT ECX
SF = INT_SLESS ECX, 0:4
ZF = INT_EQUAL ECX, 0:4
$U13480:4 = INT_AND ECX, 0xff:4
$U13500:1 = POPCOUNT $U13480:4
$U13580:1 = INT_AND $U13500:1, 1:1
PF = INT_EQUAL $U13580:1, 0:1
$U23e00:8 = COPY *[ram]0x140002180:8
RSP = INT_SUB RSP, 8:8
STORE ram(RSP), 0x14000149c:8
CALLIND $U23e00:8
RCX = COPY 0x140002000:8
$U23e00:8 = COPY *[ram]0x140002178:8
RSP = INT_SUB RSP, 8:8
STORE ram(RSP), 0x1400014a9:8
CALLIND $U23e00:8
$U23e00:8 = COPY *[ram]0x140002188:8
RSP = INT_SUB RSP, 8:8
STORE ram(RSP), 0x1400014af:8
CALLIND $U23e00:8
RDX = COPY 0xc0000409:8
RCX = COPY RAX
$U23e00:8 = COPY *[ram]0x140002190:8
RSP = INT_SUB RSP, 8:8
STORE ram(RSP), 0x1400014bd:8
CALLIND $U23e00:8
CF = INT_CARRY RSP, 0x88:8
OF = INT_SCARRY RSP, 0x88:8
RSP = INT_ADD RSP, 0x88:8
SF = INT_SLESS RSP, 0:8
ZF = INT_EQUAL RSP, 0:8
$U13480:8 = INT_AND RSP, 0xff:8
$U13500:1 = POPCOUNT $U13480:8
$U13580:1 = INT_AND $U13500:1, 1:1
PF = INT_EQUAL $U13580:1, 0:1
RIP = LOAD ram(RSP)
RSP = INT_ADD RSP, 8:8
RETURN RIP
$U34d80:8 = CALLOTHER "swi", 3:1
CALLIND $U34d80:8
RETURN 0:1
CF = INT_LESS RSP, 40:8
OF = INT_SBORROW RSP, 40:8
RSP = INT_SUB RSP, 40:8
SF = INT_SLESS RSP, 0:8
ZF = INT_EQUAL RSP, 0:8
$U13480:8 = INT_AND RSP, 0xff:8
$U13500:1 = POPCOUNT $U13480:8
$U13580:1 = INT_AND $U13500:1, 1:1
PF = INT_EQUAL $U13580:1, 0:1
RAX = COPY 0x5a4d:8
$U25e80:2 = COPY *[ram]0x140000000:2
CF = INT_LESS $U25e80:2, AX
OF = INT_SBORROW $U25e80:2, AX
$U25f80:2 = INT_SUB $U25e80:2, AX
SF = INT_SLESS $U25f80:2, 0:2
ZF = INT_EQUAL $U25f80:2, 0:2
$U13480:2 = INT_AND $U25f80:2, 0xff:2
$U13500:1 = POPCOUNT $U13480:2
$U13580:1 = INT_AND $U13500:1, 1:1
PF = INT_EQUAL $U13580:1, 0:1
CBRANCH *[ram]0x1400014e6:8, ZF
CF = COPY 0:1
OF = COPY 0:1
EAX = INT_XOR EAX, EAX
RAX = INT_ZEXT EAX
SF = INT_SLESS EAX, 0:4
ZF = INT_EQUAL EAX, 0:4
$U13480:4 = INT_AND EAX, 0xff:4
$U13500:1 = POPCOUNT $U13480:4
$U13580:1 = INT_AND $U13500:1, 1:1
PF = INT_EQUAL $U13580:1, 0:1
BRANCH *[ram]0x140001539:8
RCX = INT_SEXT *[ram]0x14000003c:4
RAX = COPY 0x140000000:8
CF = INT_CARRY RCX, RAX
OF = INT_SCARRY RCX, RAX
RCX = INT_ADD RCX, RAX
SF = INT_SLESS RCX, 0:8
ZF = INT_EQUAL RCX, 0:8
$U13480:8 = INT_AND RCX, 0xff:8
$U13500:1 = POPCOUNT $U13480:8
$U13580:1 = INT_AND $U13500:1, 1:1
PF = INT_EQUAL $U13580:1, 0:1
$Uc280:4 = LOAD ram(RCX)
$U25580:4 = COPY $Uc280:4
CF = INT_LESS $U25580:4, 0x4550:4
OF = INT_SBORROW $U25580:4, 0x4550:4
$U25680:4 = INT_SUB $U25580:4, 0x4550:4
SF = INT_SLESS $U25680:4, 0:4
ZF = INT_EQUAL $U25680:4, 0:4
$U13480:4 = INT_AND $U25680:4, 0xff:4
$U13500:1 = POPCOUNT $U13480:4
$U13580:1 = INT_AND $U13500:1, 1:1
PF = INT_EQUAL $U13580:1, 0:1
$Ucc00:1 = BOOL_NEGATE ZF
CBRANCH *[ram]0x1400014e2:8, $Ucc00:1
RAX = COPY 0x10b:8
$U3100:8 = INT_ADD RCX, 24:8
$Uc100:2 = LOAD ram($U3100:8)
$U25e80:2 = COPY $Uc100:2
CF = INT_LESS $U25e80:2, AX
OF = INT_SBORROW $U25e80:2, AX
$U25f80:2 = INT_SUB $U25e80:2, AX
SF = INT_SLESS $U25f80:2, 0:2
ZF = INT_EQUAL $U25f80:2, 0:2
$U13480:2 = INT_AND $U25f80:2, 0xff:2
$U13500:1 = POPCOUNT $U13480:2
$U13580:1 = INT_AND $U13500:1, 1:1
PF = INT_EQUAL $U13580:1, 0:1
CBRANCH *[ram]0x140001528:8, ZF
RAX = COPY 0x20b:8
$U3100:8 = INT_ADD RCX, 24:8
$Uc100:2 = LOAD ram($U3100:8)
$U25e80:2 = COPY $Uc100:2
CF = INT_LESS $U25e80:2, AX
OF = INT_SBORROW $U25e80:2, AX
$U25f80:2 = INT_SUB $U25e80:2, AX
SF = INT_SLESS $U25f80:2, 0:2
ZF = INT_EQUAL $U25f80:2, 0:2
$U13480:2 = INT_AND $U25f80:2, 0xff:2
$U13500:1 = POPCOUNT $U13480:2
$U13580:1 = INT_AND $U13500:1, 1:1
PF = INT_EQUAL $U13580:1, 0:1
$Ucc00:1 = BOOL_NEGATE ZF
CBRANCH *[ram]0x1400014e2:8, $Ucc00:1
CF = COPY 0:1
OF = COPY 0:1
EAX = INT_XOR EAX, EAX
RAX = INT_ZEXT EAX
SF = INT_SLESS EAX, 0:4
ZF = INT_EQUAL EAX, 0:4
$U13480:4 = INT_AND EAX, 0xff:4
$U13500:1 = POPCOUNT $U13480:4
$U13580:1 = INT_AND $U13500:1, 1:1
PF = INT_EQUAL $U13580:1, 0:1
$U3200:8 = INT_ADD RCX, 0x84:8
$Uc280:4 = LOAD ram($U3200:8)
$U25a00:4 = COPY $Uc280:4
CF = INT_LESS $U25a00:4, 14:4
OF = INT_SBORROW $U25a00:4, 14:4
$U25b00:4 = INT_SUB $U25a00:4, 14:4
SF = INT_SLESS $U25b00:4, 0:4
ZF = INT_EQUAL $U25b00:4, 0:4
$U13480:4 = INT_AND $U25b00:4, 0xff:4
$U13500:1 = POPCOUNT $U13480:4
$U13580:1 = INT_AND $U13500:1, 1:1
PF = INT_EQUAL $U13580:1, 0:1
$Ucd00:1 = BOOL_OR CF, ZF
CBRANCH *[ram]0x140001539:8, $Ucd00:1
$U3200:8 = INT_ADD RCX, 0xf8:8
$Uc200:4 = LOAD ram($U3200:8)
$U26000:4 = COPY $Uc200:4
CF = INT_LESS $U26000:4, EAX
OF = INT_SBORROW $U26000:4, EAX
$U26100:4 = INT_SUB $U26000:4, EAX
SF = INT_SLESS $U26100:4, 0:4
ZF = INT_EQUAL $U26100:4, 0:4
$U13480:4 = INT_AND $U26100:4, 0xff:4
$U13500:1 = POPCOUNT $U13480:4
$U13580:1 = INT_AND $U13500:1, 1:1
PF = INT_EQUAL $U13580:1, 0:1
BRANCH *[ram]0x140001536:8
CF = COPY 0:1
OF = COPY 0:1
EAX = INT_XOR EAX, EAX
RAX = INT_ZEXT EAX
SF = INT_SLESS EAX, 0:4
ZF = INT_EQUAL EAX, 0:4
$U13480:4 = INT_AND EAX, 0xff:4
$U13500:1 = POPCOUNT $U13480:4
$U13580:1 = INT_AND $U13500:1, 1:1
PF = INT_EQUAL $U13580:1, 0:1
$U3100:8 = INT_ADD RCX, 0x74:8
$Uc280:4 = LOAD ram($U3100:8)
$U25a00:4 = COPY $Uc280:4
CF = INT_LESS $U25a00:4, 14:4
OF = INT_SBORROW $U25a00:4, 14:4
$U25b00:4 = INT_SUB $U25a00:4, 14:4
SF = INT_SLESS $U25b00:4, 0:4
ZF = INT_EQUAL $U25b00:4, 0:4
$U13480:4 = INT_AND $U25b00:4, 0xff:4
$U13500:1 = POPCOUNT $U13480:4
$U13580:1 = INT_AND $U13500:1, 1:1
PF = INT_EQUAL $U13580:1, 0:1
$Ucd00:1 = BOOL_OR CF, ZF
CBRANCH *[ram]0x140001539:8, $Ucd00:1
$U3200:8 = INT_ADD RCX, 0xe8:8
$Uc200:4 = LOAD ram($U3200:8)
$U26000:4 = COPY $Uc200:4
CF = INT_LESS $U26000:4, EAX
OF = INT_SBORROW $U26000:4, EAX
$U26100:4 = INT_SUB $U26000:4, EAX
SF = INT_SLESS $U26100:4, 0:4
ZF = INT_EQUAL $U26100:4, 0:4
$U13480:4 = INT_AND $U26100:4, 0xff:4
$U13500:1 = POPCOUNT $U13480:4
$U13580:1 = INT_AND $U13500:1, 1:1
PF = INT_EQUAL $U13580:1, 0:1
$Ucc00:1 = BOOL_NEGATE ZF
AL = COPY $Ucc00:1
RCX = COPY 2:8
*[ram]0x1400035f0:4 = COPY EAX
RSP = INT_SUB RSP, 8:8
STORE ram(RSP), 0x140001549:8
CALL *[ram]0x140001958:8
ECX = COPY EAX
RCX = INT_ZEXT ECX
$U23e00:8 = COPY *[ram]0x140002250:8
RSP = INT_SUB RSP, 8:8
STORE ram(RSP), 0x140001551:8
CALLIND $U23e00:8
RCX = COPY *[ram]0x140002210:8
CF = COPY 0:1
OF = COPY 0:1
RAX = INT_OR RAX, -1:8
SF = INT_SLESS RAX, 0:8
ZF = INT_EQUAL RAX, 0:8
$U13480:8 = INT_AND RAX, 0xff:8
$U13500:1 = POPCOUNT $U13480:8
$U13580:1 = INT_AND $U13500:1, 1:1
PF = INT_EQUAL $U13580:1, 0:1
*[ram]0x140003610:8 = COPY RAX
*[ram]0x140003618:8 = COPY RAX
EAX = COPY *[ram]0x140003604:4
RAX = INT_ZEXT EAX
$U5480:4 = COPY EAX
STORE ram(RCX), $U5480:4
RCX = COPY *[ram]0x140002218:8
EAX = COPY *[ram]0x1400035f8:4
RAX = INT_ZEXT EAX
$U5480:4 = COPY EAX
STORE ram(RCX), $U5480:4
RSP = INT_SUB RSP, 8:8
STORE ram(RSP), 0x140001586:8
CALL *[ram]0x1400019b0:8
$U25a00:4 = COPY *[ram]0x140003050:4
CF = INT_LESS $U25a00:4, 0:4
OF = INT_SBORROW $U25a00:4, 0:4
$U25b00:4 = INT_SUB $U25a00:4, 0:4
SF = INT_SLESS $U25b00:4, 0:4
ZF = INT_EQUAL $U25b00:4, 0:4
$U13480:4 = INT_AND $U25b00:4, 0xff:4
$U13500:1 = POPCOUNT $U13480:4
$U13580:1 = INT_AND $U13500:1, 1:1
PF = INT_EQUAL $U13580:1, 0:1
$Ucc00:1 = BOOL_NEGATE ZF
CBRANCH *[ram]0x14000159c:8, $Ucc00:1
RCX = COPY 0x1400019b0:8
$U23e00:8 = COPY *[ram]0x1400021f0:8
RSP = INT_SUB RSP, 8:8
STORE ram(RSP), 0x14000159c:8
CALLIND $U23e00:8
CF = COPY 0:1
OF = COPY 0:1
EAX = INT_XOR EAX, EAX
RAX = INT_ZEXT EAX
SF = INT_SLESS EAX, 0:4
ZF = INT_EQUAL EAX, 0:4
$U13480:4 = INT_AND EAX, 0xff:4
$U13500:1 = POPCOUNT $U13480:4
$U13580:1 = INT_AND $U13500:1, 1:1
PF = INT_EQUAL $U13580:1, 0:1
CF = INT_CARRY RSP, 40:8
OF = INT_SCARRY RSP, 40:8
RSP = INT_ADD RSP, 40:8
SF = INT_SLESS RSP, 0:8
ZF = INT_EQUAL RSP, 0:8
$U13480:8 = INT_AND RSP, 0xff:8
$U13500:1 = POPCOUNT $U13480:8
$U13580:1 = INT_AND $U13500:1, 1:1
PF = INT_EQUAL $U13580:1, 0:1
RIP = LOAD ram(RSP)
RSP = INT_ADD RSP, 8:8
RETURN RIP
$U34d80:8 = CALLOTHER "swi", 3:1
CALLIND $U34d80:8
RETURN 0:1
CF = INT_LESS RSP, 56:8
OF = INT_SBORROW RSP, 56:8
RSP = INT_SUB RSP, 56:8
SF = INT_SLESS RSP, 0:8
ZF = INT_EQUAL RSP, 0:8
$U13480:8 = INT_AND RSP, 0xff:8
$U13500:1 = POPCOUNT $U13480:8
$U13580:1 = INT_AND $U13500:1, 1:1
PF = INT_EQUAL $U13580:1, 0:1
EAX = COPY *[ram]0x140003600:4
RAX = INT_ZEXT EAX
R8 = COPY 0x1400035e8:8
R9D = COPY *[ram]0x1400035fc:4
R9 = INT_ZEXT R9D
RDX = COPY 0x1400035e0:8
*[ram]0x1400035f4:4 = COPY EAX
RCX = COPY 0x1400035d8:8
RAX = COPY 0x1400035f4:8
$U3800:8 = INT_ADD 32:8, RSP
$U5500:8 = COPY RAX
STORE ram($U3800:8), $U5500:8
$U23e00:8 = COPY *[ram]0x140002230:8
RSP = INT_SUB RSP, 8:8
STORE ram(RSP), 0x1400015ee:8
CALLIND $U23e00:8
*[ram]0x1400035dc:4 = COPY EAX
CF = INT_CARRY RSP, 56:8
OF = INT_SCARRY RSP, 56:8
RSP = INT_ADD RSP, 56:8
SF = INT_SLESS RSP, 0:8
ZF = INT_EQUAL RSP, 0:8
$U13480:8 = INT_AND RSP, 0xff:8
$U13500:1 = POPCOUNT $U13480:8
$U13580:1 = INT_AND $U13500:1, 1:1
PF = INT_EQUAL $U13580:1, 0:1
RIP = LOAD ram(RSP)
RSP = INT_ADD RSP, 8:8
RETURN RIP
$U34d80:8 = CALLOTHER "swi", 3:1
CALLIND $U34d80:8
RETURN 0:1
RAX = COPY RSP
$U3100:8 = INT_ADD RAX, 8:8
$U5500:8 = COPY RBX
STORE ram($U3100:8), $U5500:8
$U3100:8 = INT_ADD RAX, 16:8
$U5500:8 = COPY RSI
STORE ram($U3100:8), $U5500:8
$U3100:8 = INT_ADD RAX, 24:8
$U5500:8 = COPY RDI
STORE ram($U3100:8), $U5500:8
$U3100:8 = INT_ADD RAX, 32:8
$U5500:8 = COPY R14
STORE ram($U3100:8), $U5500:8
$Uf000:8 = COPY R15
RSP = INT_SUB RSP, 8:8
STORE ram(RSP), $Uf000:8
CF = INT_LESS RSP, 0xb0:8
OF = INT_SBORROW RSP, 0xb0:8
RSP = INT_SUB RSP, 0xb0:8
SF = INT_SLESS RSP, 0:8
ZF = INT_EQUAL RSP, 0:8
$U13480:8 = INT_AND RSP, 0xff:8
$U13500:1 = POPCOUNT $U13480:8
$U13580:1 = INT_AND $U13500:1, 1:1
PF = INT_EQUAL $U13580:1, 0:1
CF = COPY 0:1
OF = COPY 0:1
R14D = INT_XOR R14D, R14D
R14 = INT_ZEXT R14D
SF = INT_SLESS R14D, 0:4
ZF = INT_EQUAL R14D, 0:4
$U13480:4 = INT_AND R14D, 0xff:4
$U13500:1 = POPCOUNT $U13480:4
$U13580:1 = INT_AND $U13500:1, 1:1
PF = INT_EQUAL $U13580:1, 0:1
$U3800:8 = INT_ADD 32:8, RSP
$U5480:4 = COPY R14D
STORE ram($U3800:8), $U5480:4
$U3100:8 = INT_ADD RAX, 0xffffffffffffff88:8
RCX = COPY $U3100:8
$U23e00:8 = COPY *[ram]0x1400021d0:8
RSP = INT_SUB RSP, 8:8
STORE ram(RSP), 0x14000162e:8
CALLIND $U23e00:8
$U4f00:8 = INT_ADD GS_OFFSET, 48:8
$Uc300:8 = LOAD ram($U4f00:8)
RAX = COPY $Uc300:8
$U3100:8 = INT_ADD RAX, 8:8
$Uc300:8 = LOAD ram($U3100:8)
RBX = COPY $Uc300:8
ESI = COPY R14D
RSI = INT_ZEXT ESI
CF = COPY 0:1
OF = COPY 0:1
EAX = INT_XOR EAX, EAX
RAX = INT_ZEXT EAX
SF = INT_SLESS EAX, 0:4
ZF = INT_EQUAL EAX, 0:4
$U13480:4 = INT_AND EAX, 0xff:4
$U13500:1 = POPCOUNT $U13480:4
$U13580:1 = INT_AND $U13500:1, 1:1
PF = INT_EQUAL $U13580:1, 0:1
  CALLOTHER "LOCK"
  $Ucaa80:8 = COPY *[ram]0x140003620:8
  CF = INT_LESS RAX, $Ucaa80:8
  OF = INT_SBORROW RAX, $Ucaa80:8
  $Ucab80:8 = INT_SUB RAX, $Ucaa80:8
  SF = INT_SLESS $Ucab80:8, 0:8
  ZF = INT_EQUAL $Ucab80:8, 0:8
  $U13480:8 = INT_AND $Ucab80:8, 0xff:8
  $U13500:1 = POPCOUNT $U13480:8
  $U13580:1 = INT_AND $U13500:1, 1:1
  PF = INT_EQUAL $U13580:1, 0:1
  CBRANCH <0>, ZF
  RAX = COPY $Ucaa80:8
  BRANCH <1>
<0>
  *[ram]0x140003620:8 = COPY RBX
<1>
  CALLOTHER "UNLOCK"
CBRANCH *[ram]0x140001667:8, ZF
$U26900:8 = COPY RBX
CF = INT_LESS RAX, $U26900:8
OF = INT_SBORROW RAX, $U26900:8
$U26a00:8 = INT_SUB RAX, $U26900:8
SF = INT_SLESS $U26a00:8, 0:8
ZF = INT_EQUAL $U26a00:8, 0:8
$U13480:8 = INT_AND $U26a00:8, 0xff:8
$U13500:1 = POPCOUNT $U13480:8
$U13580:1 = INT_AND $U13500:1, 1:1
PF = INT_EQUAL $U13580:1, 0:1
$Ucc00:1 = BOOL_NEGATE ZF
CBRANCH *[ram]0x14000165a:8, $Ucc00:1
RBX = COPY 1:8
ESI = COPY EBX
RSI = INT_ZEXT ESI
BRANCH *[ram]0x14000166c:8
RCX = COPY 0x3e8:8
$U23e00:8 = COPY *[ram]0x1400021e0:8
RSP = INT_SUB RSP, 8:8
STORE ram(RSP), 0x140001665:8
CALLIND $U23e00:8
BRANCH *[ram]0x14000163f:8
RBX = COPY 1:8
EAX = COPY *[ram]0x140003628:4
RAX = INT_ZEXT EAX
$U26600:4 = COPY EBX
CF = INT_LESS EAX, $U26600:4
OF = INT_SBORROW EAX, $U26600:4
$U26700:4 = INT_SUB EAX, $U26600:4
SF = INT_SLESS $U26700:4, 0:4
ZF = INT_EQUAL $U26700:4, 0:4
$U13480:4 = INT_AND $U26700:4, 0xff:4
$U13500:1 = POPCOUNT $U13480:4
$U13580:1 = INT_AND $U13500:1, 1:1
PF = INT_EQUAL $U13580:1, 0:1
$Ucc00:1 = BOOL_NEGATE ZF
CBRANCH *[ram]0x140001684:8, $Ucc00:1
RDI = COPY 31:8
ECX = COPY EDI
RCX = INT_ZEXT ECX
RSP = INT_SUB RSP, 8:8
STORE ram(RSP), 0x140001682:8
CALL *[ram]0x1400019a3:8
BRANCH *[ram]0x1400016f0:8
EAX = COPY *[ram]0x140003628:4
RAX = INT_ZEXT EAX
CF = COPY 0:1
OF = COPY 0:1
$U56580:4 = INT_AND EAX, EAX
SF = INT_SLESS $U56580:4, 0:4
ZF = INT_EQUAL $U56580:4, 0:4
$U13480:4 = INT_AND $U56580:4, 0xff:4
$U13500:1 = POPCOUNT $U13480:4
$U13580:1 = INT_AND $U13500:1, 1:1
PF = INT_EQUAL $U13580:1, 0:1
$Ucc00:1 = BOOL_NEGATE ZF
CBRANCH *[ram]0x1400016e5:8, $Ucc00:1
*[ram]0x140003628:4 = COPY EBX
R15 = COPY 0x1400022a8:8
RDI = COPY 0x140002290:8
$U3800:8 = INT_ADD 48:8, RSP
$U5500:8 = COPY RDI
STORE ram($U3800:8), $U5500:8
EAX = COPY R14D
RAX = INT_ZEXT EAX
$U3800:8 = INT_ADD 36:8, RSP
$U5480:4 = COPY EAX
STORE ram($U3800:8), $U5480:4
$U26900:8 = COPY R15
CF = INT_LESS RDI, $U26900:8
OF = INT_SBORROW RDI, $U26900:8
$U26a00:8 = INT_SUB RDI, $U26900:8
SF = INT_SLESS $U26a00:8, 0:8
ZF = INT_EQUAL $U26a00:8, 0:8
$U13480:8 = INT_AND $U26a00:8, 0xff:8
$U13500:1 = POPCOUNT $U13480:8
$U13580:1 = INT_AND $U13500:1, 1:1
PF = INT_EQUAL $U13580:1, 0:1
$Ucb00:1 = BOOL_NEGATE CF
CBRANCH *[ram]0x1400016d7:8, $Ucb00:1
CF = COPY 0:1
OF = COPY 0:1
$U56580:4 = INT_AND EAX, EAX
SF = INT_SLESS $U56580:4, 0:4
ZF = INT_EQUAL $U56580:4, 0:4
$U13480:4 = INT_AND $U56580:4, 0xff:4
$U13500:1 = POPCOUNT $U13480:4
$U13580:1 = INT_AND $U13500:1, 1:1
PF = INT_EQUAL $U13580:1, 0:1
$Ucc00:1 = BOOL_NEGATE ZF
CBRANCH *[ram]0x1400016db:8, $Ucc00:1
$Uc300:8 = LOAD ram(RDI)
$U26180:8 = COPY $Uc300:8
CF = INT_LESS $U26180:8, R14
OF = INT_SBORROW $U26180:8, R14
$U26280:8 = INT_SUB $U26180:8, R14
SF = INT_SLESS $U26280:8, 0:8
ZF = INT_EQUAL $U26280:8, 0:8
$U13480:8 = INT_AND $U26280:8, 0xff:8
$U13500:1 = POPCOUNT $U13480:8
$U13580:1 = INT_AND $U13500:1, 1:1
PF = INT_EQUAL $U13580:1, 0:1
CBRANCH *[ram]0x1400016cc:8, ZF
$Uc300:8 = LOAD ram(RDI)
RAX = COPY $Uc300:8
RCX = COPY *[ram]0x140002270:8
$U23e00:8 = COPY RCX
RSP = INT_SUB RSP, 8:8
STORE ram(RSP), 0x1400016c8:8
CALLIND $U23e00:8
$U3800:8 = INT_ADD 36:8, RSP
$U5480:4 = COPY EAX
STORE ram($U3800:8), $U5480:4
CF = INT_CARRY RDI, 8:8
OF = INT_SCARRY RDI, 8:8
RDI = INT_ADD RDI, 8:8
SF = INT_SLESS RDI, 0:8
ZF = INT_EQUAL RDI, 0:8
$U13480:8 = INT_AND RDI, 0xff:8
$U13500:1 = POPCOUNT $U13480:8
$U13580:1 = INT_AND $U13500:1, 1:1
PF = INT_EQUAL $U13580:1, 0:1
$U3800:8 = INT_ADD 48:8, RSP
$U5500:8 = COPY RDI
STORE ram($U3800:8), $U5500:8
BRANCH *[ram]0x1400016ae:8
CF = COPY 0:1
OF = COPY 0:1
$U56580:4 = INT_AND EAX, EAX
SF = INT_SLESS $U56580:4, 0:4
ZF = INT_EQUAL $U56580:4, 0:4
$U13480:4 = INT_AND $U56580:4, 0xff:4
$U13500:1 = POPCOUNT $U13480:4
$U13580:1 = INT_AND $U13500:1, 1:1
PF = INT_EQUAL $U13580:1, 0:1
CBRANCH *[ram]0x1400016eb:8, ZF
RAX = COPY 0xff:8
BRANCH *[ram]0x140001846:8
*[ram]0x1400035d4:4 = COPY EBX
RDI = COPY 31:8
EAX = COPY *[ram]0x140003628:4
RAX = INT_ZEXT EAX
$U26600:4 = COPY EBX
CF = INT_LESS EAX, $U26600:4
OF = INT_SBORROW EAX, $U26600:4
$U26700:4 = INT_SUB EAX, $U26600:4
SF = INT_SLESS $U26700:4, 0:4
ZF = INT_EQUAL $U26700:4, 0:4
$U13480:4 = INT_AND $U26700:4, 0xff:4
$U13500:1 = POPCOUNT $U13480:4
$U13580:1 = INT_AND $U13500:1, 1:1
PF = INT_EQUAL $U13580:1, 0:1
$Ucc00:1 = BOOL_NEGATE ZF
CBRANCH *[ram]0x140001717:8, $Ucc00:1
RDX = COPY 0x140002288:8
RCX = COPY 0x140002278:8
RSP = INT_SUB RSP, 8:8
STORE ram(RSP), 0x14000170d:8
CALL *[ram]0x140001aa3:8
*[ram]0x140003628:4 = COPY 2:4
CF = COPY 0:1
OF = COPY 0:1
$U56580:4 = INT_AND ESI, ESI
SF = INT_SLESS $U56580:4, 0:4
ZF = INT_EQUAL $U56580:4, 0:4
$U13480:4 = INT_AND $U56580:4, 0xff:4
$U13500:1 = POPCOUNT $U13480:4
$U13580:1 = INT_AND $U13500:1, 1:1
PF = INT_EQUAL $U13580:1, 0:1
$Ucc00:1 = BOOL_NEGATE ZF
CBRANCH *[ram]0x140001725:8, $Ucc00:1
RAX = COPY R14
CALLOTHER "LOCK"
$Ucd600:8 = COPY *[ram]0x140003620:8
*[ram]0x140003620:8 = COPY RAX
RAX = COPY $Ucd600:8
CALLOTHER "UNLOCK"
$U26180:8 = COPY *[ram]0x140003630:8
CF = INT_LESS $U26180:8, R14
OF = INT_SBORROW $U26180:8, R14
$U26280:8 = INT_SUB $U26180:8, R14
SF = INT_SLESS $U26280:8, 0:8
ZF = INT_EQUAL $U26280:8, 0:8
$U13480:8 = INT_AND $U26280:8, 0xff:8
$U13500:1 = POPCOUNT $U13480:8
$U13580:1 = INT_AND $U13500:1, 1:1
PF = INT_EQUAL $U13580:1, 0:1
CBRANCH *[ram]0x140001758:8, ZF
RCX = COPY 0x140003630:8
RSP = INT_SUB RSP, 8:8
STORE ram(RSP), 0x14000173a:8
CALL *[ram]0x140001a10:8
CF = COPY 0:1
OF = COPY 0:1
$U56580:4 = INT_AND EAX, EAX
SF = INT_SLESS $U56580:4, 0:4
ZF = INT_EQUAL $U56580:4, 0:4
$U13480:4 = INT_AND $U56580:4, 0xff:4
$U13500:1 = POPCOUNT $U13480:4
$U13580:1 = INT_AND $U13500:1, 1:1
PF = INT_EQUAL $U13580:1, 0:1
CBRANCH *[ram]0x140001758:8, ZF
CF = COPY 0:1
OF = COPY 0:1
R8D = INT_XOR R8D, R8D
R8 = INT_ZEXT R8D
SF = INT_SLESS R8D, 0:4
ZF = INT_EQUAL R8D, 0:4
$U13480:4 = INT_AND R8D, 0xff:4
$U13500:1 = POPCOUNT $U13480:4
$U13580:1 = INT_AND $U13500:1, 1:1
PF = INT_EQUAL $U13580:1, 0:1
$U3100:8 = INT_ADD R8, 2:8
EDX = SUBPIECE $U3100:8, 0:4
RDX = INT_ZEXT EDX
CF = COPY 0:1
OF = COPY 0:1
ECX = INT_XOR ECX, ECX
RCX = INT_ZEXT ECX
SF = INT_SLESS ECX, 0:4
ZF = INT_EQUAL ECX, 0:4
$U13480:4 = INT_AND ECX, 0xff:4
$U13500:1 = POPCOUNT $U13480:4
$U13580:1 = INT_AND $U13500:1, 1:1
PF = INT_EQUAL $U13580:1, 0:1
RAX = COPY *[ram]0x140003630:8
R9 = COPY *[ram]0x140002270:8
$U23e00:8 = COPY R9
RSP = INT_SUB RSP, 8:8
STORE ram(RSP), 0x140001758:8
CALLIND $U23e00:8
RAX = COPY *[ram]0x140002208:8
$Uc300:8 = LOAD ram(RAX)
RCX = COPY $Uc300:8
CF = COPY 0:1
OF = COPY 0:1
$U56680:8 = INT_AND RCX, RCX
SF = INT_SLESS $U56680:8, 0:8
ZF = INT_EQUAL $U56680:8, 0:8
$U13480:8 = INT_AND $U56680:8, 0xff:8
$U13500:1 = POPCOUNT $U13480:8
$U13580:1 = INT_AND $U13500:1, 1:1
PF = INT_EQUAL $U13580:1, 0:1
$Ucc00:1 = BOOL_NEGATE ZF
CBRANCH *[ram]0x140001771:8, $Ucc00:1
RAX = COPY 0xff:8
BRANCH *[ram]0x140001846:8
$U3800:8 = INT_ADD 40:8, RSP
$U5500:8 = COPY RCX
STORE ram($U3800:8), $U5500:8
$U3800:8 = INT_ADD 32:8, RSP
$Uc200:4 = LOAD ram($U3800:8)
EDX = COPY $Uc200:4
RDX = INT_ZEXT EDX
$Uc180:2 = LOAD ram(RCX)
EAX = INT_ZEXT $Uc180:2
RAX = INT_ZEXT EAX
$U25880:2 = COPY AX
CF = INT_LESS $U25880:2, 32:2
OF = INT_SBORROW $U25880:2, 32:2
$U25980:2 = INT_SUB $U25880:2, 32:2
SF = INT_SLESS $U25980:2, 0:2
ZF = INT_EQUAL $U25980:2, 0:2
$U13480:2 = INT_AND $U25980:2, 0xff:2
$U13500:1 = POPCOUNT $U13480:2
$U13580:1 = INT_AND $U13500:1, 1:1
PF = INT_EQUAL $U13580:1, 0:1
$Ucd80:1 = BOOL_OR CF, ZF
$Uce80:1 = BOOL_NEGATE $Ucd80:1
CBRANCH *[ram]0x1400017f7:8, $Uce80:1
CF = COPY 0:1
OF = COPY 0:1
$U56480:2 = INT_AND AX, AX
SF = INT_SLESS $U56480:2, 0:2
ZF = INT_EQUAL $U56480:2, 0:2
$U13480:2 = INT_AND $U56480:2, 0xff:2
$U13500:1 = POPCOUNT $U13480:2
$U13580:1 = INT_AND $U13500:1, 1:1
PF = INT_EQUAL $U13580:1, 0:1
CBRANCH *[ram]0x14000178c:8, ZF
CF = COPY 0:1
OF = COPY 0:1
$U56580:4 = INT_AND EDX, EDX
SF = INT_SLESS $U56580:4, 0:4
ZF = INT_EQUAL $U56580:4, 0:4
$U13480:4 = INT_AND $U56580:4, 0xff:4
$U13500:1 = POPCOUNT $U13480:4
$U13580:1 = INT_AND $U13500:1, 1:1
PF = INT_EQUAL $U13580:1, 0:1
$Ucc00:1 = BOOL_NEGATE ZF
CBRANCH *[ram]0x1400017f7:8, $Ucc00:1
CF = INT_LESS AX, BX
OF = INT_SBORROW AX, BX
AX = INT_SUB AX, BX
SF = INT_SLESS AX, 0:2
ZF = INT_EQUAL AX, 0:2
$U13480:2 = INT_AND AX, 0xff:2
$U13500:1 = POPCOUNT $U13480:2
$U13580:1 = INT_AND $U13500:1, 1:1
PF = INT_EQUAL $U13580:1, 0:1
$U26480:2 = COPY DI
CF = INT_LESS AX, $U26480:2
OF = INT_SBORROW AX, $U26480:2
$U26580:2 = INT_SUB AX, $U26480:2
SF = INT_SLESS $U26580:2, 0:2
ZF = INT_EQUAL $U26580:2, 0:2
$U13480:2 = INT_AND $U26580:2, 0xff:2
$U13500:1 = POPCOUNT $U13480:2
$U13580:1 = INT_AND $U13500:1, 1:1
PF = INT_EQUAL $U13580:1, 0:1
$Ucd80:1 = BOOL_OR CF, ZF
$Uce80:1 = BOOL_NEGATE $Ucd80:1
CBRANCH *[ram]0x1400017a2:8, $Uce80:1
CF = INT_CARRY RCX, 2:8
OF = INT_SCARRY RCX, 2:8
RCX = INT_ADD RCX, 2:8
SF = INT_SLESS RCX, 0:8
ZF = INT_EQUAL RCX, 0:8
$U13480:8 = INT_AND RCX, 0xff:8
$U13500:1 = POPCOUNT $U13480:8
$U13580:1 = INT_AND $U13500:1, 1:1
PF = INT_EQUAL $U13580:1, 0:1
$U3800:8 = INT_ADD 40:8, RSP
$U5500:8 = COPY RCX
STORE ram($U3800:8), $U5500:8
$Uc180:2 = LOAD ram(RCX)
EAX = INT_ZEXT $Uc180:2
RAX = INT_ZEXT EAX
BRANCH *[ram]0x14000178c:8
$U3800:8 = INT_ADD 0x7c:8, RSP
CF = COPY 0:1
OF = COPY 0:1
$Uc000:1 = LOAD ram($U3800:8)
$U56380:1 = INT_AND $Uc000:1, BL
SF = INT_SLESS $U56380:1, 0:1
ZF = INT_EQUAL $U56380:1, 0:1
$U13480:1 = INT_AND $U56380:1, 0xff:1
$U13500:1 = POPCOUNT $U13480:1
$U13580:1 = INT_AND $U13500:1, 1:1
PF = INT_EQUAL $U13580:1, 0:1
$U3c80:8 = INT_ADD 0x80:8, RSP
$Uc180:2 = LOAD ram($U3c80:8)
EAX = INT_ZEXT $Uc180:2
RAX = INT_ZEXT EAX
R9 = COPY 10:8
$Ucc00:1 = BOOL_NEGATE ZF
R9 = INT_ZEXT R9D
$U24d80:1 = BOOL_NEGATE $Ucc00:1
CBRANCH *[ram]0x1400017b8:8, $U24d80:1
R9D = COPY EAX
R8 = COPY RCX
CF = COPY 0:1
OF = COPY 0:1
EDX = INT_XOR EDX, EDX
RDX = INT_ZEXT EDX
SF = INT_SLESS EDX, 0:4
ZF = INT_EQUAL EDX, 0:4
$U13480:4 = INT_AND EDX, 0xff:4
$U13500:1 = POPCOUNT $U13480:4
$U13580:1 = INT_AND $U13500:1, 1:1
PF = INT_EQUAL $U13580:1, 0:1
RCX = COPY 0x140000000:8
RSP = INT_SUB RSP, 8:8
STORE ram(RSP), 0x1400017c9:8
CALL *[ram]0x14000113c:8
*[ram]0x1400035d0:4 = COPY EAX
$U26000:4 = COPY *[ram]0x1400035f0:4
CF = INT_LESS $U26000:4, R14D
OF = INT_SBORROW $U26000:4, R14D
$U26100:4 = INT_SUB $U26000:4, R14D
SF = INT_SLESS $U26100:4, 0:4
ZF = INT_EQUAL $U26100:4, 0:4
$U13480:4 = INT_AND $U26100:4, 0xff:4
$U13500:1 = POPCOUNT $U13480:4
$U13580:1 = INT_AND $U13500:1, 1:1
PF = INT_EQUAL $U13580:1, 0:1
$Ucc00:1 = BOOL_NEGATE ZF
CBRANCH *[ram]0x1400017e0:8, $Ucc00:1
ECX = COPY EAX
RCX = INT_ZEXT ECX
$U23e00:8 = COPY *[ram]0x140002248:8
RSP = INT_SUB RSP, 8:8
STORE ram(RSP), 0x1400017e0:8
CALLIND $U23e00:8
RETURN 0:8
$U26000:4 = COPY *[ram]0x1400035d4:4
CF = INT_LESS $U26000:4, R14D
OF = INT_SBORROW $U26000:4, R14D
$U26100:4 = INT_SUB $U26000:4, R14D
SF = INT_SLESS $U26100:4, 0:4
ZF = INT_EQUAL $U26100:4, 0:4
$U13480:4 = INT_AND $U26100:4, 0xff:4
$U13500:1 = POPCOUNT $U13480:4
$U13580:1 = INT_AND $U13500:1, 1:1
PF = INT_EQUAL $U13580:1, 0:1
$Ucc00:1 = BOOL_NEGATE ZF
CBRANCH *[ram]0x1400017f5:8, $Ucc00:1
$U23e00:8 = COPY *[ram]0x140002228:8
RSP = INT_SUB RSP, 8:8
STORE ram(RSP), 0x1400017ef:8
CALLIND $U23e00:8
EAX = COPY *[ram]0x1400035d0:4
RAX = INT_ZEXT EAX
BRANCH *[ram]0x140001846:8
$U25880:2 = COPY AX
CF = INT_LESS $U25880:2, 34:2
OF = INT_SBORROW $U25880:2, 34:2
$U25980:2 = INT_SUB $U25880:2, 34:2
SF = INT_SLESS $U25980:2, 0:2
ZF = INT_EQUAL $U25980:2, 0:2
$U13480:2 = INT_AND $U25980:2, 0xff:2
$U13500:1 = POPCOUNT $U13480:2
$U13580:1 = INT_AND $U13500:1, 1:1
PF = INT_EQUAL $U13580:1, 0:1
$Ucc00:1 = BOOL_NEGATE ZF
CBRANCH *[ram]0x14000180b:8, $Ucc00:1
EAX = COPY R14D
RAX = INT_ZEXT EAX
CF = COPY 0:1
OF = COPY 0:1
$U56580:4 = INT_AND EDX, EDX
SF = INT_SLESS $U56580:4, 0:4
ZF = INT_EQUAL $U56580:4, 0:4
$U13480:4 = INT_AND $U56580:4, 0xff:4
$U13500:1 = POPCOUNT $U13480:4
$U13580:1 = INT_AND $U13500:1, 1:1
PF = INT_EQUAL $U13580:1, 0:1
AL = COPY ZF
EDX = COPY EAX
RDX = INT_ZEXT EDX
$U3800:8 = INT_ADD 32:8, RSP
$U5480:4 = COPY EAX
STORE ram($U3800:8), $U5480:4
CF = INT_CARRY RCX, 2:8
OF = INT_SCARRY RCX, 2:8
RCX = INT_ADD RCX, 2:8
SF = INT_SLESS RCX, 0:8
ZF = INT_EQUAL RCX, 0:8
$U13480:8 = INT_AND RCX, 0xff:8
$U13500:1 = POPCOUNT $U13480:8
$U13580:1 = INT_AND $U13500:1, 1:1
PF = INT_EQUAL $U13580:1, 0:1
$U3800:8 = INT_ADD 40:8, RSP
$U5500:8 = COPY RCX
STORE ram($U3800:8), $U5500:8
BRANCH *[ram]0x14000177a:8
$U3c80:8 = INT_ADD 0xb0:8, RSP
R11 = COPY $U3c80:8
$U3100:8 = INT_ADD R11, 16:8
$Uc300:8 = LOAD ram($U3100:8)
RBX = COPY $Uc300:8
$U3100:8 = INT_ADD R11, 24:8
$Uc300:8 = LOAD ram($U3100:8)
RSI = COPY $Uc300:8
$U3100:8 = INT_ADD R11, 32:8
$Uc300:8 = LOAD ram($U3100:8)
RDI = COPY $Uc300:8
$U3100:8 = INT_ADD R11, 40:8
$Uc300:8 = LOAD ram($U3100:8)
R14 = COPY $Uc300:8
RSP = COPY R11
$U3c380:8 = COPY 0:8
$U3c380:8 = LOAD ram(RSP)
RSP = INT_ADD RSP, 8:8
R15 = COPY $U3c380:8
RIP = LOAD ram(RSP)
RSP = INT_ADD RSP, 8:8
RETURN RIP
$U34d80:8 = CALLOTHER "swi", 3:1
CALLIND $U34d80:8
RETURN 0:1
CF = INT_LESS RSP, 40:8
OF = INT_SBORROW RSP, 40:8
RSP = INT_SUB RSP, 40:8
SF = INT_SLESS RSP, 0:8
ZF = INT_EQUAL RSP, 0:8
$U13480:8 = INT_AND RSP, 0xff:8
$U13500:1 = POPCOUNT $U13480:8
$U13580:1 = INT_AND $U13500:1, 1:1
PF = INT_EQUAL $U13580:1, 0:1
RSP = INT_SUB RSP, 8:8
STORE ram(RSP), 0x140001879:8
CALL *[ram]0x1400012a4:8
CF = INT_CARRY RSP, 40:8
OF = INT_SCARRY RSP, 40:8
RSP = INT_ADD RSP, 40:8
SF = INT_SLESS RSP, 0:8
ZF = INT_EQUAL RSP, 0:8
$U13480:8 = INT_AND RSP, 0xff:8
$U13500:1 = POPCOUNT $U13480:8
$U13580:1 = INT_AND $U13500:1, 1:1
PF = INT_EQUAL $U13580:1, 0:1
CALL *[ram]0x140001600:8
RETURN 0:8
$U34d80:8 = CALLOTHER "swi", 3:1
CALLIND $U34d80:8
RETURN 0:1
CF = INT_LESS RSP, 40:8
OF = INT_SBORROW RSP, 40:8
RSP = INT_SUB RSP, 40:8
SF = INT_SLESS RSP, 0:8
ZF = INT_EQUAL RSP, 0:8
$U13480:8 = INT_AND RSP, 0xff:8
$U13500:1 = POPCOUNT $U13480:8
$U13580:1 = INT_AND $U13500:1, 1:1
PF = INT_EQUAL $U13580:1, 0:1
$Uc300:8 = LOAD ram(RCX)
RAX = COPY $Uc300:8
$Uc280:4 = LOAD ram(RAX)
$U25580:4 = COPY $Uc280:4
CF = INT_LESS $U25580:4, 0xe06d7363:4
OF = INT_SBORROW $U25580:4, 0xe06d7363:4
$U25680:4 = INT_SUB $U25580:4, 0xe06d7363:4
SF = INT_SLESS $U25680:4, 0:4
ZF = INT_EQUAL $U25680:4, 0:4
$U13480:4 = INT_AND $U25680:4, 0xff:4
$U13500:1 = POPCOUNT $U13480:4
$U13580:1 = INT_AND $U13500:1, 1:1
PF = INT_EQUAL $U13580:1, 0:1
$Ucc00:1 = BOOL_NEGATE ZF
CBRANCH *[ram]0x1400018c2:8, $Ucc00:1
$U3100:8 = INT_ADD RAX, 24:8
$Uc280:4 = LOAD ram($U3100:8)
$U25a00:4 = COPY $Uc280:4
CF = INT_LESS $U25a00:4, 4:4
OF = INT_SBORROW $U25a00:4, 4:4
$U25b00:4 = INT_SUB $U25a00:4, 4:4
SF = INT_SLESS $U25b00:4, 0:4
ZF = INT_EQUAL $U25b00:4, 0:4
$U13480:4 = INT_AND $U25b00:4, 0xff:4
$U13500:1 = POPCOUNT $U13480:4
$U13580:1 = INT_AND $U13500:1, 1:1
PF = INT_EQUAL $U13580:1, 0:1
$Ucc00:1 = BOOL_NEGATE ZF
CBRANCH *[ram]0x1400018c2:8, $Ucc00:1
$U3100:8 = INT_ADD RAX, 32:8
$Uc200:4 = LOAD ram($U3100:8)
ECX = COPY $Uc200:4
RCX = INT_ZEXT ECX
$U3200:8 = INT_ADD RCX, 0xffffffffe66cfae0:8
EAX = SUBPIECE $U3200:8, 0:4
RAX = INT_ZEXT EAX
$U25a00:4 = COPY EAX
CF = INT_LESS $U25a00:4, 2:4
OF = INT_SBORROW $U25a00:4, 2:4
$U25b00:4 = INT_SUB $U25a00:4, 2:4
SF = INT_SLESS $U25b00:4, 0:4
ZF = INT_EQUAL $U25b00:4, 0:4
$U13480:4 = INT_AND $U25b00:4, 0xff:4
$U13500:1 = POPCOUNT $U13480:4
$U13580:1 = INT_AND $U13500:1, 1:1
PF = INT_EQUAL $U13580:1, 0:1
$Ucd00:1 = BOOL_OR CF, ZF
CBRANCH *[ram]0x1400018bb:8, $Ucd00:1
$U25580:4 = COPY ECX
CF = INT_LESS $U25580:4, 0x1994000:4
OF = INT_SBORROW $U25580:4, 0x1994000:4
$U25680:4 = INT_SUB $U25580:4, 0x1994000:4
SF = INT_SLESS $U25680:4, 0:4
ZF = INT_EQUAL $U25680:4, 0:4
$U13480:4 = INT_AND $U25680:4, 0xff:4
$U13500:1 = POPCOUNT $U13480:4
$U13580:1 = INT_AND $U13500:1, 1:1
PF = INT_EQUAL $U13580:1, 0:1
$Ucc00:1 = BOOL_NEGATE ZF
CBRANCH *[ram]0x1400018c2:8, $Ucc00:1
$U23e00:8 = COPY *[ram]0x140002220:8
RSP = INT_SUB RSP, 8:8
STORE ram(RSP), 0x1400018c1:8
CALLIND $U23e00:8
$U34d80:8 = CALLOTHER "swi", 3:1
CALLIND $U34d80:8
RETURN 0:1
CF = COPY 0:1
OF = COPY 0:1
EAX = INT_XOR EAX, EAX
RAX = INT_ZEXT EAX
SF = INT_SLESS EAX, 0:4
ZF = INT_EQUAL EAX, 0:4
$U13480:4 = INT_AND EAX, 0xff:4
$U13500:1 = POPCOUNT $U13480:4
$U13580:1 = INT_AND $U13500:1, 1:1
PF = INT_EQUAL $U13580:1, 0:1
CF = INT_CARRY RSP, 40:8
OF = INT_SCARRY RSP, 40:8
RSP = INT_ADD RSP, 40:8
SF = INT_SLESS RSP, 0:8
ZF = INT_EQUAL RSP, 0:8
$U13480:8 = INT_AND RSP, 0xff:8
$U13500:1 = POPCOUNT $U13480:8
$U13580:1 = INT_AND $U13500:1, 1:1
PF = INT_EQUAL $U13580:1, 0:1
RIP = LOAD ram(RSP)
RSP = INT_ADD RSP, 8:8
RETURN RIP
$U34d80:8 = CALLOTHER "swi", 3:1
CALLIND $U34d80:8
RETURN 0:1
CF = INT_LESS RSP, 40:8
OF = INT_SBORROW RSP, 40:8
RSP = INT_SUB RSP, 40:8
SF = INT_SLESS RSP, 0:8
ZF = INT_EQUAL RSP, 0:8
$U13480:8 = INT_AND RSP, 0xff:8
$U13500:1 = POPCOUNT $U13480:8
$U13580:1 = INT_AND $U13500:1, 1:1
PF = INT_EQUAL $U13580:1, 0:1
RCX = COPY 0x140001890:8
$U23e00:8 = COPY *[ram]0x140002180:8
RSP = INT_SUB RSP, 8:8
STORE ram(RSP), 0x1400018e1:8
CALLIND $U23e00:8
CF = COPY 0:1
OF = COPY 0:1
EAX = INT_XOR EAX, EAX
RAX = INT_ZEXT EAX
SF = INT_SLESS EAX, 0:4
ZF = INT_EQUAL EAX, 0:4
$U13480:4 = INT_AND EAX, 0xff:4
$U13500:1 = POPCOUNT $U13480:4
$U13580:1 = INT_AND $U13500:1, 1:1
PF = INT_EQUAL $U13580:1, 0:1
CF = INT_CARRY RSP, 40:8
OF = INT_SCARRY RSP, 40:8
RSP = INT_ADD RSP, 40:8
SF = INT_SLESS RSP, 0:8
ZF = INT_EQUAL RSP, 0:8
$U13480:8 = INT_AND RSP, 0xff:8
$U13500:1 = POPCOUNT $U13480:8
$U13580:1 = INT_AND $U13500:1, 1:1
PF = INT_EQUAL $U13580:1, 0:1
RIP = LOAD ram(RSP)
RSP = INT_ADD RSP, 8:8
RETURN RIP
$U34d80:8 = CALLOTHER "swi", 3:1
CALLIND $U34d80:8
RETURN 0:1
BRANCHIND *[ram]0x140002240:8
CF = INT_LESS RSP, 24:8
OF = INT_SBORROW RSP, 24:8
RSP = INT_SUB RSP, 24:8
SF = INT_SLESS RSP, 0:8
ZF = INT_EQUAL RSP, 0:8
$U13480:8 = INT_AND RSP, 0xff:8
$U13500:1 = POPCOUNT $U13480:8
$U13580:1 = INT_AND $U13500:1, 1:1
PF = INT_EQUAL $U13580:1, 0:1
CF = COPY 0:1
OF = COPY 0:1
EDX = INT_XOR EDX, EDX
RDX = INT_ZEXT EDX
SF = INT_SLESS EDX, 0:4
ZF = INT_EQUAL EDX, 0:4
$U13480:4 = INT_AND EDX, 0xff:4
$U13500:1 = POPCOUNT $U13480:4
$U13580:1 = INT_AND $U13500:1, 1:1
PF = INT_EQUAL $U13580:1, 0:1
$U3100:8 = INT_ADD RCX, -1:8
RAX = COPY $U3100:8
$U25b80:8 = COPY RAX
CF = INT_LESS $U25b80:8, -3:8
OF = INT_SBORROW $U25b80:8, -3:8
$U25c80:8 = INT_SUB $U25b80:8, -3:8
SF = INT_SLESS $U25c80:8, 0:8
ZF = INT_EQUAL $U25c80:8, 0:8
$U13480:8 = INT_AND $U25c80:8, 0xff:8
$U13500:1 = POPCOUNT $U13480:8
$U13580:1 = INT_AND $U13500:1, 1:1
PF = INT_EQUAL $U13580:1, 0:1
$Ucd80:1 = BOOL_OR CF, ZF
$Uce80:1 = BOOL_NEGATE $Ucd80:1
CBRANCH *[ram]0x140001948:8, $Uce80:1
RAX = COPY 0x5a4d:8
$Uc100:2 = LOAD ram(RCX)
$U25e80:2 = COPY $Uc100:2
CF = INT_LESS $U25e80:2, AX
OF = INT_SBORROW $U25e80:2, AX
$U25f80:2 = INT_SUB $U25e80:2, AX
SF = INT_SLESS $U25f80:2, 0:2
ZF = INT_EQUAL $U25f80:2, 0:2
$U13480:2 = INT_AND $U25f80:2, 0xff:2
$U13500:1 = POPCOUNT $U13480:2
$U13580:1 = INT_AND $U13500:1, 1:1
PF = INT_EQUAL $U13580:1, 0:1
$Ucc00:1 = BOOL_NEGATE ZF
CBRANCH *[ram]0x140001940:8, $Ucc00:1
$U3100:8 = INT_ADD RCX, 60:8
$Uc200:4 = LOAD ram($U3100:8)
$U26000:4 = COPY $Uc200:4
CF = INT_LESS $U26000:4, EDX
OF = INT_SBORROW $U26000:4, EDX
$U26100:4 = INT_SUB $U26000:4, EDX
SF = INT_SLESS $U26100:4, 0:4
ZF = INT_EQUAL $U26100:4, 0:4
$U13480:4 = INT_AND $U26100:4, 0xff:4
$U13500:1 = POPCOUNT $U13480:4
$U13580:1 = INT_AND $U13500:1, 1:1
PF = INT_EQUAL $U13580:1, 0:1
$Ud180:1 = INT_NOTEQUAL OF, SF
CBRANCH *[ram]0x140001940:8, $Ud180:1
$U3100:8 = INT_ADD RCX, 60:8
$Uc280:4 = LOAD ram($U3100:8)
$U25580:4 = COPY $Uc280:4
CF = INT_LESS $U25580:4, 0x10000000:4
OF = INT_SBORROW $U25580:4, 0x10000000:4
$U25680:4 = INT_SUB $U25580:4, 0x10000000:4
SF = INT_SLESS $U25680:4, 0:4
ZF = INT_EQUAL $U25680:4, 0:4
$U13480:4 = INT_AND $U25680:4, 0xff:4
$U13500:1 = POPCOUNT $U13480:4
$U13580:1 = INT_AND $U13500:1, 1:1
PF = INT_EQUAL $U13580:1, 0:1
$Ucb00:1 = BOOL_NEGATE CF
CBRANCH *[ram]0x140001940:8, $Ucb00:1
$U3100:8 = INT_ADD RCX, 60:8
$Uc200:4 = LOAD ram($U3100:8)
RAX = INT_SEXT $Uc200:4
CF = INT_CARRY RAX, RCX
OF = INT_SCARRY RAX, RCX
RAX = INT_ADD RAX, RCX
SF = INT_SLESS RAX, 0:8
ZF = INT_EQUAL RAX, 0:8
$U13480:8 = INT_AND RAX, 0xff:8
$U13500:1 = POPCOUNT $U13480:8
$U13580:1 = INT_AND $U13500:1, 1:1
PF = INT_EQUAL $U13580:1, 0:1
$U5500:8 = COPY RAX
STORE ram(RSP), $U5500:8
$Uc280:4 = LOAD ram(RAX)
$U25580:4 = COPY $Uc280:4
CF = INT_LESS $U25580:4, 0x4550:4
OF = INT_SBORROW $U25580:4, 0x4550:4
$U25680:4 = INT_SUB $U25580:4, 0x4550:4
SF = INT_SLESS $U25680:4, 0:4
ZF = INT_EQUAL $U25680:4, 0:4
$U13480:4 = INT_AND $U25680:4, 0xff:4
$U13500:1 = POPCOUNT $U13480:4
$U13580:1 = INT_AND $U13500:1, 1:1
PF = INT_EQUAL $U13580:1, 0:1
$Ucc00:1 = BOOL_NEGATE ZF
$U24e00:1 = BOOL_NEGATE $Ucc00:1
CBRANCH *[ram]0x140001939:8, $U24e00:1
RAX = COPY RDX
RDX = COPY RAX
$U5500:8 = COPY RAX
STORE ram(RSP), $U5500:8
BRANCH *[ram]0x140001948:8
RAX = COPY RDX
CF = INT_CARRY RSP, 24:8
OF = INT_SCARRY RSP, 24:8
RSP = INT_ADD RSP, 24:8
SF = INT_SLESS RSP, 0:8
ZF = INT_EQUAL RSP, 0:8
$U13480:8 = INT_AND RSP, 0xff:8
$U13500:1 = POPCOUNT $U13480:8
$U13580:1 = INT_AND $U13500:1, 1:1
PF = INT_EQUAL $U13580:1, 0:1
RIP = LOAD ram(RSP)
RSP = INT_ADD RSP, 8:8
RETURN RIP
$U34d80:8 = CALLOTHER "swi", 3:1
CALLIND $U34d80:8
RETURN 0:1
$Uf000:8 = COPY RBX
RSP = INT_SUB RSP, 8:8
STORE ram(RSP), $Uf000:8
CF = INT_LESS RSP, 32:8
OF = INT_SBORROW RSP, 32:8
RSP = INT_SUB RSP, 32:8
SF = INT_SLESS RSP, 0:8
ZF = INT_EQUAL RSP, 0:8
$U13480:8 = INT_AND RSP, 0xff:8
$U13500:1 = POPCOUNT $U13480:8
$U13580:1 = INT_AND $U13500:1, 1:1
PF = INT_EQUAL $U13580:1, 0:1
EBX = COPY ECX
RBX = INT_ZEXT EBX
CF = COPY 0:1
OF = COPY 0:1
ECX = INT_XOR ECX, ECX
RCX = INT_ZEXT ECX
SF = INT_SLESS ECX, 0:4
ZF = INT_EQUAL ECX, 0:4
$U13480:4 = INT_AND ECX, 0xff:4
$U13500:1 = POPCOUNT $U13480:4
$U13580:1 = INT_AND $U13500:1, 1:1
PF = INT_EQUAL $U13580:1, 0:1
$U23e00:8 = COPY *[ram]0x1400021c0:8
RSP = INT_SUB RSP, 8:8
STORE ram(RSP), 0x140001968:8
CALLIND $U23e00:8
CF = COPY 0:1
OF = COPY 0:1
$U56680:8 = INT_AND RAX, RAX
SF = INT_SLESS $U56680:8, 0:8
ZF = INT_EQUAL $U56680:8, 0:8
$U13480:8 = INT_AND $U56680:8, 0xff:8
$U13500:1 = POPCOUNT $U13480:8
$U13580:1 = INT_AND $U13500:1, 1:1
PF = INT_EQUAL $U13580:1, 0:1
CBRANCH *[ram]0x140001995:8, ZF
RCX = COPY RAX
RSP = INT_SUB RSP, 8:8
STORE ram(RSP), 0x140001975:8
CALL *[ram]0x1400018fc:8
CF = COPY 0:1
OF = COPY 0:1
$U56680:8 = INT_AND RAX, RAX
SF = INT_SLESS $U56680:8, 0:8
ZF = INT_EQUAL $U56680:8, 0:8
$U13480:8 = INT_AND $U56680:8, 0xff:8
$U13500:1 = POPCOUNT $U13480:8
$U13580:1 = INT_AND $U13500:1, 1:1
PF = INT_EQUAL $U13580:1, 0:1
CBRANCH *[ram]0x140001995:8, ZF
RCX = COPY 2:8
$U3100:8 = INT_ADD RAX, 0x5c:8
$Uc100:2 = LOAD ram($U3100:8)
$U25e80:2 = COPY $Uc100:2
CF = INT_LESS $U25e80:2, CX
OF = INT_SBORROW $U25e80:2, CX
$U25f80:2 = INT_SUB $U25e80:2, CX
SF = INT_SLESS $U25f80:2, 0:2
ZF = INT_EQUAL $U25f80:2, 0:2
$U13480:2 = INT_AND $U25f80:2, 0xff:2
$U13500:1 = POPCOUNT $U13480:2
$U13580:1 = INT_AND $U13500:1, 1:1
PF = INT_EQUAL $U13580:1, 0:1
$Ucc00:1 = BOOL_NEGATE ZF
CBRANCH *[ram]0x140001989:8, $Ucc00:1
EAX = COPY ECX
RAX = INT_ZEXT EAX
BRANCH *[ram]0x140001997:8
$U3100:8 = INT_ADD RAX, 0x5c:8
$Uc180:2 = LOAD ram($U3100:8)
$U25880:2 = COPY $Uc180:2
CF = INT_LESS $U25880:2, 3:2
OF = INT_SBORROW $U25880:2, 3:2
$U25980:2 = INT_SUB $U25880:2, 3:2
SF = INT_SLESS $U25980:2, 0:2
ZF = INT_EQUAL $U25980:2, 0:2
$U13480:2 = INT_AND $U25980:2, 0xff:2
$U13500:1 = POPCOUNT $U13480:2
$U13580:1 = INT_AND $U13500:1, 1:1
PF = INT_EQUAL $U13580:1, 0:1
RAX = COPY 1:8
CBRANCH *[ram]0x140001997:8, ZF
EAX = COPY EBX
RAX = INT_ZEXT EAX
CF = INT_CARRY RSP, 32:8
OF = INT_SCARRY RSP, 32:8
RSP = INT_ADD RSP, 32:8
SF = INT_SLESS RSP, 0:8
ZF = INT_EQUAL RSP, 0:8
$U13480:8 = INT_AND RSP, 0xff:8
$U13500:1 = POPCOUNT $U13480:8
$U13580:1 = INT_AND $U13500:1, 1:1
PF = INT_EQUAL $U13580:1, 0:1
$U3c380:8 = COPY 0:8
$U3c380:8 = LOAD ram(RSP)
RSP = INT_ADD RSP, 8:8
RBX = COPY $U3c380:8
RIP = LOAD ram(RSP)
RSP = INT_ADD RSP, 8:8
RETURN RIP
$U34d80:8 = CALLOTHER "swi", 3:1
CALLIND $U34d80:8
RETURN 0:1
BRANCHIND *[ram]0x140002238:8
CF = COPY 0:1
OF = COPY 0:1
EAX = INT_XOR EAX, EAX
RAX = INT_ZEXT EAX
SF = INT_SLESS EAX, 0:4
ZF = INT_EQUAL EAX, 0:4
$U13480:4 = INT_AND EAX, 0xff:4
$U13500:1 = POPCOUNT $U13480:4
$U13580:1 = INT_AND $U13500:1, 1:1
PF = INT_EQUAL $U13580:1, 0:1
RIP = LOAD ram(RSP)
RSP = INT_ADD RSP, 8:8
RETURN RIP
$U3100:8 = INT_ADD RCX, 60:8
$Uc200:4 = LOAD ram($U3100:8)
R8 = INT_SEXT $Uc200:4
CF = COPY 0:1
OF = COPY 0:1
R9D = INT_XOR R9D, R9D
R9 = INT_ZEXT R9D
SF = INT_SLESS R9D, 0:4
ZF = INT_EQUAL R9D, 0:4
$U13480:4 = INT_AND R9D, 0xff:4
$U13500:1 = POPCOUNT $U13480:4
$U13580:1 = INT_AND $U13500:1, 1:1
PF = INT_EQUAL $U13580:1, 0:1
CF = INT_CARRY R8, RCX
OF = INT_SCARRY R8, RCX
R8 = INT_ADD R8, RCX
SF = INT_SLESS R8, 0:8
ZF = INT_EQUAL R8, 0:8
$U13480:8 = INT_AND R8, 0xff:8
$U13500:1 = POPCOUNT $U13480:8
$U13580:1 = INT_AND $U13500:1, 1:1
PF = INT_EQUAL $U13580:1, 0:1
R10 = COPY RDX
$U3100:8 = INT_ADD R8, 20:8
$Uc180:2 = LOAD ram($U3100:8)
EAX = INT_ZEXT $Uc180:2
RAX = INT_ZEXT EAX
$U3100:8 = INT_ADD R8, 6:8
$Uc180:2 = LOAD ram($U3100:8)
R11D = INT_ZEXT $Uc180:2
R11 = INT_ZEXT R11D
CF = INT_CARRY RAX, 24:8
OF = INT_SCARRY RAX, 24:8
RAX = INT_ADD RAX, 24:8
SF = INT_SLESS RAX, 0:8
ZF = INT_EQUAL RAX, 0:8
$U13480:8 = INT_AND RAX, 0xff:8
$U13500:1 = POPCOUNT $U13480:8
$U13580:1 = INT_AND $U13500:1, 1:1
PF = INT_EQUAL $U13580:1, 0:1
CF = INT_CARRY RAX, R8
OF = INT_SCARRY RAX, R8
RAX = INT_ADD RAX, R8
SF = INT_SLESS RAX, 0:8
ZF = INT_EQUAL RAX, 0:8
$U13480:8 = INT_AND RAX, 0xff:8
$U13500:1 = POPCOUNT $U13480:8
$U13580:1 = INT_AND $U13500:1, 1:1
PF = INT_EQUAL $U13580:1, 0:1
CF = COPY 0:1
OF = COPY 0:1
$U56580:4 = INT_AND R11D, R11D
SF = INT_SLESS $U56580:4, 0:4
ZF = INT_EQUAL $U56580:4, 0:4
$U13480:4 = INT_AND $U56580:4, 0xff:4
$U13500:1 = POPCOUNT $U13480:4
$U13580:1 = INT_AND $U13500:1, 1:1
PF = INT_EQUAL $U13580:1, 0:1
CBRANCH *[ram]0x140001a01:8, ZF
$U3100:8 = INT_ADD RAX, 12:8
$Uc200:4 = LOAD ram($U3100:8)
EDX = COPY $Uc200:4
RDX = INT_ZEXT EDX
$U26900:8 = COPY RDX
CF = INT_LESS R10, $U26900:8
OF = INT_SBORROW R10, $U26900:8
$U26a00:8 = INT_SUB R10, $U26900:8
SF = INT_SLESS $U26a00:8, 0:8
ZF = INT_EQUAL $U26a00:8, 0:8
$U13480:8 = INT_AND $U26a00:8, 0xff:8
$U13500:1 = POPCOUNT $U13480:8
$U13580:1 = INT_AND $U13500:1, 1:1
PF = INT_EQUAL $U13580:1, 0:1
CBRANCH *[ram]0x1400019f5:8, CF
$U3100:8 = INT_ADD RAX, 8:8
$Uc200:4 = LOAD ram($U3100:8)
ECX = COPY $Uc200:4
RCX = INT_ZEXT ECX
CF = INT_CARRY ECX, EDX
OF = INT_SCARRY ECX, EDX
ECX = INT_ADD ECX, EDX
RCX = INT_ZEXT ECX
SF = INT_SLESS ECX, 0:4
ZF = INT_EQUAL ECX, 0:4
$U13480:4 = INT_AND ECX, 0xff:4
$U13500:1 = POPCOUNT $U13480:4
$U13580:1 = INT_AND $U13500:1, 1:1
PF = INT_EQUAL $U13580:1, 0:1
$U26900:8 = COPY RCX
CF = INT_LESS R10, $U26900:8
OF = INT_SBORROW R10, $U26900:8
$U26a00:8 = INT_SUB R10, $U26900:8
SF = INT_SLESS $U26a00:8, 0:8
ZF = INT_EQUAL $U26a00:8, 0:8
$U13480:8 = INT_AND $U26a00:8, 0xff:8
$U13500:1 = POPCOUNT $U13480:8
$U13580:1 = INT_AND $U13500:1, 1:1
PF = INT_EQUAL $U13580:1, 0:1
CBRANCH *[ram]0x140001a03:8, CF
OF = INT_SCARRY R9D, 1:4
R9D = INT_ADD R9D, 1:4
R9 = INT_ZEXT R9D
SF = INT_SLESS R9D, 0:4
ZF = INT_EQUAL R9D, 0:4
$U13480:4 = INT_AND R9D, 0xff:4
$U13500:1 = POPCOUNT $U13480:4
$U13580:1 = INT_AND $U13500:1, 1:1
PF = INT_EQUAL $U13580:1, 0:1
CF = INT_CARRY RAX, 40:8
OF = INT_SCARRY RAX, 40:8
RAX = INT_ADD RAX, 40:8
SF = INT_SLESS RAX, 0:8
ZF = INT_EQUAL RAX, 0:8
$U13480:8 = INT_AND RAX, 0xff:8
$U13500:1 = POPCOUNT $U13480:8
$U13580:1 = INT_AND $U13500:1, 1:1
PF = INT_EQUAL $U13580:1, 0:1
$U26600:4 = COPY R11D
CF = INT_LESS R9D, $U26600:4
OF = INT_SBORROW R9D, $U26600:4
$U26700:4 = INT_SUB R9D, $U26600:4
SF = INT_SLESS $U26700:4, 0:4
ZF = INT_EQUAL $U26700:4, 0:4
$U13480:4 = INT_AND $U26700:4, 0xff:4
$U13500:1 = POPCOUNT $U13480:4
$U13580:1 = INT_AND $U13500:1, 1:1
PF = INT_EQUAL $U13580:1, 0:1
CBRANCH *[ram]0x1400019e3:8, CF
CF = COPY 0:1
OF = COPY 0:1
EAX = INT_XOR EAX, EAX
RAX = INT_ZEXT EAX
SF = INT_SLESS EAX, 0:4
ZF = INT_EQUAL EAX, 0:4
$U13480:4 = INT_AND EAX, 0xff:4
$U13500:1 = POPCOUNT $U13480:4
$U13580:1 = INT_AND $U13500:1, 1:1
PF = INT_EQUAL $U13580:1, 0:1
RIP = LOAD ram(RSP)
RSP = INT_ADD RSP, 8:8
RETURN RIP
$U3800:8 = INT_ADD 8:8, RSP
$U5500:8 = COPY RBX
STORE ram($U3800:8), $U5500:8
$Uf000:8 = COPY RDI
RSP = INT_SUB RSP, 8:8
STORE ram(RSP), $Uf000:8
CF = INT_LESS RSP, 32:8
OF = INT_SBORROW RSP, 32:8
RSP = INT_SUB RSP, 32:8
SF = INT_SLESS RSP, 0:8
ZF = INT_EQUAL RSP, 0:8
$U13480:8 = INT_AND RSP, 0xff:8
$U13500:1 = POPCOUNT $U13480:8
$U13580:1 = INT_AND $U13500:1, 1:1
PF = INT_EQUAL $U13580:1, 0:1
RBX = COPY RCX
RDI = COPY 0x140000000:8
RCX = COPY RDI
RSP = INT_SUB RSP, 8:8
STORE ram(RSP), 0x140001a2c:8
CALL *[ram]0x140001a70:8
CF = COPY 0:1
OF = COPY 0:1
$U56580:4 = INT_AND EAX, EAX
SF = INT_SLESS $U56580:4, 0:4
ZF = INT_EQUAL $U56580:4, 0:4
$U13480:4 = INT_AND $U56580:4, 0xff:4
$U13500:1 = POPCOUNT $U13480:4
$U13580:1 = INT_AND $U13500:1, 1:1
PF = INT_EQUAL $U13580:1, 0:1
CBRANCH *[ram]0x140001a52:8, ZF
CF = INT_LESS RBX, RDI
OF = INT_SBORROW RBX, RDI
RBX = INT_SUB RBX, RDI
SF = INT_SLESS RBX, 0:8
ZF = INT_EQUAL RBX, 0:8
$U13480:8 = INT_AND RBX, 0xff:8
$U13500:1 = POPCOUNT $U13480:8
$U13580:1 = INT_AND $U13500:1, 1:1
PF = INT_EQUAL $U13580:1, 0:1
RDX = COPY RBX
RCX = COPY RDI
RSP = INT_SUB RSP, 8:8
STORE ram(RSP), 0x140001a3e:8
CALL *[ram]0x1400019c0:8
CF = COPY 0:1
OF = COPY 0:1
$U56680:8 = INT_AND RAX, RAX
SF = INT_SLESS $U56680:8, 0:8
ZF = INT_EQUAL $U56680:8, 0:8
$U13480:8 = INT_AND $U56680:8, 0xff:8
$U13500:1 = POPCOUNT $U13480:8
$U13580:1 = INT_AND $U13500:1, 1:1
PF = INT_EQUAL $U13580:1, 0:1
CBRANCH *[ram]0x140001a52:8, ZF
$U3100:8 = INT_ADD RAX, 36:8
$Uc200:4 = LOAD ram($U3100:8)
EAX = COPY $Uc200:4
RAX = INT_ZEXT EAX
$U54680:4 = INT_AND 31:4, 31:4
$U54700:4 = COPY EAX
EAX = INT_RIGHT EAX, $U54680:4
RAX = INT_ZEXT EAX
$U16980:1 = INT_NOTEQUAL $U54680:4, 0:4
$U16a00:4 = INT_SUB $U54680:4, 1:4
$U16a80:4 = INT_RIGHT $U54700:4, $U16a00:4
$U16b00:4 = INT_AND $U16a80:4, 1:4
$U16c00:1 = INT_NOTEQUAL $U16b00:4, 0:4
$U16c80:1 = BOOL_NEGATE $U16980:1
$U16d00:1 = INT_AND $U16c80:1, CF
$U16d80:1 = INT_AND $U16980:1, $U16c00:1
CF = INT_OR $U16d00:1, $U16d80:1
$U16f00:1 = INT_EQUAL $U54680:4, 1:4
$U17000:1 = INT_SLESS $U54700:4, 0:4
$U17080:1 = BOOL_NEGATE $U16f00:1
$U17100:1 = INT_AND $U17080:1, OF
$U17180:1 = INT_AND $U16f00:1, $U17000:1
OF = INT_OR $U17100:1, $U17180:1
$U13700:1 = INT_NOTEQUAL $U54680:4, 0:4
$U13800:1 = INT_SLESS EAX, 0:4
$U13880:1 = BOOL_NEGATE $U13700:1
$U13900:1 = INT_AND $U13880:1, SF
$U13980:1 = INT_AND $U13700:1, $U13800:1
SF = INT_OR $U13900:1, $U13980:1
$U13b00:1 = INT_EQUAL EAX, 0:4
$U13b80:1 = BOOL_NEGATE $U13700:1
$U13c00:1 = INT_AND $U13b80:1, ZF
$U13c80:1 = INT_AND $U13700:1, $U13b00:1
ZF = INT_OR $U13c00:1, $U13c80:1
EAX = INT_NEGATE EAX
RAX = INT_ZEXT EAX
CF = COPY 0:1
OF = COPY 0:1
EAX = INT_AND EAX, 1:4
RAX = INT_ZEXT EAX
SF = INT_SLESS EAX, 0:4
ZF = INT_EQUAL EAX, 0:4
$U13480:4 = INT_AND EAX, 0xff:4
$U13500:1 = POPCOUNT $U13480:4
$U13580:1 = INT_AND $U13500:1, 1:1
PF = INT_EQUAL $U13580:1, 0:1
BRANCH *[ram]0x140001a52:8
$U3800:8 = INT_ADD 48:8, RSP
$Uc300:8 = LOAD ram($U3800:8)
RBX = COPY $Uc300:8
CF = INT_CARRY RSP, 32:8
OF = INT_SCARRY RSP, 32:8
RSP = INT_ADD RSP, 32:8
SF = INT_SLESS RSP, 0:8
ZF = INT_EQUAL RSP, 0:8
$U13480:8 = INT_AND RSP, 0xff:8
$U13500:1 = POPCOUNT $U13480:8
$U13580:1 = INT_AND $U13500:1, 1:1
PF = INT_EQUAL $U13580:1, 0:1
$U3c380:8 = COPY 0:8
$U3c380:8 = LOAD ram(RSP)
RSP = INT_ADD RSP, 8:8
RDI = COPY $U3c380:8
RIP = LOAD ram(RSP)
RSP = INT_ADD RSP, 8:8
RETURN RIP
$U34d80:8 = CALLOTHER "swi", 3:1
CALLIND $U34d80:8
RETURN 0:1
RAX = COPY 0x5a4d:8
$Uc100:2 = LOAD ram(RCX)
$U25e80:2 = COPY $Uc100:2
CF = INT_LESS $U25e80:2, AX
OF = INT_SBORROW $U25e80:2, AX
$U25f80:2 = INT_SUB $U25e80:2, AX
SF = INT_SLESS $U25f80:2, 0:2
ZF = INT_EQUAL $U25f80:2, 0:2
$U13480:2 = INT_AND $U25f80:2, 0xff:2
$U13500:1 = POPCOUNT $U13480:2
$U13580:1 = INT_AND $U13500:1, 1:1
PF = INT_EQUAL $U13580:1, 0:1
$Ucc00:1 = BOOL_NEGATE ZF
CBRANCH *[ram]0x140001a9a:8, $Ucc00:1
$U3100:8 = INT_ADD RCX, 60:8
$Uc200:4 = LOAD ram($U3100:8)
RAX = INT_SEXT $Uc200:4
CF = INT_CARRY RAX, RCX
OF = INT_SCARRY RAX, RCX
RAX = INT_ADD RAX, RCX
SF = INT_SLESS RAX, 0:8
ZF = INT_EQUAL RAX, 0:8
$U13480:8 = INT_AND RAX, 0xff:8
$U13500:1 = POPCOUNT $U13480:8
$U13580:1 = INT_AND $U13500:1, 1:1
PF = INT_EQUAL $U13580:1, 0:1
$Uc280:4 = LOAD ram(RAX)
$U25580:4 = COPY $Uc280:4
CF = INT_LESS $U25580:4, 0x4550:4
OF = INT_SBORROW $U25580:4, 0x4550:4
$U25680:4 = INT_SUB $U25580:4, 0x4550:4
SF = INT_SLESS $U25680:4, 0:4
ZF = INT_EQUAL $U25680:4, 0:4
$U13480:4 = INT_AND $U25680:4, 0xff:4
$U13500:1 = POPCOUNT $U13480:4
$U13580:1 = INT_AND $U13500:1, 1:1
PF = INT_EQUAL $U13580:1, 0:1
$Ucc00:1 = BOOL_NEGATE ZF
CBRANCH *[ram]0x140001a9a:8, $Ucc00:1
RCX = COPY 0x20b:8
$U3100:8 = INT_ADD RAX, 24:8
$Uc100:2 = LOAD ram($U3100:8)
$U25e80:2 = COPY $Uc100:2
CF = INT_LESS $U25e80:2, CX
OF = INT_SBORROW $U25e80:2, CX
$U25f80:2 = INT_SUB $U25e80:2, CX
SF = INT_SLESS $U25f80:2, 0:2
ZF = INT_EQUAL $U25f80:2, 0:2
$U13480:2 = INT_AND $U25f80:2, 0xff:2
$U13500:1 = POPCOUNT $U13480:2
$U13580:1 = INT_AND $U13500:1, 1:1
PF = INT_EQUAL $U13580:1, 0:1
$Ucc00:1 = BOOL_NEGATE ZF
CBRANCH *[ram]0x140001a9a:8, $Ucc00:1
RAX = COPY 1:8
RIP = LOAD ram(RSP)
RSP = INT_ADD RSP, 8:8
RETURN RIP
CF = COPY 0:1
OF = COPY 0:1
EAX = INT_XOR EAX, EAX
RAX = INT_ZEXT EAX
SF = INT_SLESS EAX, 0:4
ZF = INT_EQUAL EAX, 0:4
$U13480:4 = INT_AND EAX, 0xff:4
$U13500:1 = POPCOUNT $U13480:4
$U13580:1 = INT_AND $U13500:1, 1:1
PF = INT_EQUAL $U13580:1, 0:1
RIP = LOAD ram(RSP)
RSP = INT_ADD RSP, 8:8
RETURN RIP
BRANCHIND *[ram]0x1400021f8:8
BRANCHIND *[ram]0x140002200:8
RIP = LOAD ram(RSP)
RSP = INT_ADD RSP, 8:8
RSP = INT_ADD RSP, 0:8
RETURN RIP
CF = INT_LESS RSP, 40:8
OF = INT_SBORROW RSP, 40:8
RSP = INT_SUB RSP, 40:8
SF = INT_SLESS RSP, 0:8
ZF = INT_EQUAL RSP, 0:8
$U13480:8 = INT_AND RSP, 0xff:8
$U13500:1 = POPCOUNT $U13480:8
$U13580:1 = INT_AND $U13500:1, 1:1
PF = INT_EQUAL $U13580:1, 0:1
$U3100:8 = INT_ADD R9, 56:8
$Uc300:8 = LOAD ram($U3100:8)
R8 = COPY $Uc300:8
RCX = COPY RDX
RDX = COPY R9
RSP = INT_SUB RSP, 8:8
STORE ram(RSP), 0x140001aeb:8
CALL *[ram]0x140001afc:8
RAX = COPY 1:8
CF = INT_CARRY RSP, 40:8
OF = INT_SCARRY RSP, 40:8
RSP = INT_ADD RSP, 40:8
SF = INT_SLESS RSP, 0:8
ZF = INT_EQUAL RSP, 0:8
$U13480:8 = INT_AND RSP, 0xff:8
$U13500:1 = POPCOUNT $U13480:8
$U13580:1 = INT_AND $U13500:1, 1:1
PF = INT_EQUAL $U13580:1, 0:1
RIP = LOAD ram(RSP)
RSP = INT_ADD RSP, 8:8
RETURN RIP
$U34d80:8 = CALLOTHER "swi", 3:1
CALLIND $U34d80:8
RETURN 0:1
$Uf000:8 = COPY RBX
RSP = INT_SUB RSP, 8:8
STORE ram(RSP), $Uf000:8
$Uc200:4 = LOAD ram(R8)
R11D = COPY $Uc200:4
R11 = INT_ZEXT R11D
RBX = COPY RDX
CF = COPY 0:1
OF = COPY 0:1
R11D = INT_AND R11D, 0xfffffff8:4
R11 = INT_ZEXT R11D
SF = INT_SLESS R11D, 0:4
ZF = INT_EQUAL R11D, 0:4
$U13480:4 = INT_AND R11D, 0xff:4
$U13500:1 = POPCOUNT $U13480:4
$U13580:1 = INT_AND $U13500:1, 1:1
PF = INT_EQUAL $U13580:1, 0:1
R9 = COPY RCX
CF = COPY 0:1
OF = COPY 0:1
$Uc080:1 = LOAD ram(R8)
$U55f80:1 = INT_AND $Uc080:1, 4:1
SF = INT_SLESS $U55f80:1, 0:1
ZF = INT_EQUAL $U55f80:1, 0:1
$U13480:1 = INT_AND $U55f80:1, 0xff:1
$U13500:1 = POPCOUNT $U13480:1
$U13580:1 = INT_AND $U13500:1, 1:1
PF = INT_EQUAL $U13580:1, 0:1
R10 = COPY RCX
CBRANCH *[ram]0x140001b27:8, ZF
$U3100:8 = INT_ADD R8, 8:8
$Uc200:4 = LOAD ram($U3100:8)
EAX = COPY $Uc200:4
RAX = INT_ZEXT EAX
$U3100:8 = INT_ADD R8, 4:8
$Uc200:4 = LOAD ram($U3100:8)
R10 = INT_SEXT $Uc200:4
CF = INT_NOTEQUAL EAX, 0:4
OF = INT_SBORROW 0:4, EAX
EAX = INT_2COMP EAX
SF = INT_SLESS EAX, 0:4
ZF = INT_EQUAL EAX, 0:4
$U13480:4 = INT_AND EAX, 0xff:4
$U13500:1 = POPCOUNT $U13480:4
$U13580:1 = INT_AND $U13500:1, 1:1
PF = INT_EQUAL $U13580:1, 0:1
RAX = INT_ZEXT EAX
CF = INT_CARRY R10, RCX
OF = INT_SCARRY R10, RCX
R10 = INT_ADD R10, RCX
SF = INT_SLESS R10, 0:8
ZF = INT_EQUAL R10, 0:8
$U13480:8 = INT_AND R10, 0xff:8
$U13500:1 = POPCOUNT $U13480:8
$U13580:1 = INT_AND $U13500:1, 1:1
PF = INT_EQUAL $U13580:1, 0:1
RCX = INT_SEXT EAX
CF = COPY 0:1
OF = COPY 0:1
R10 = INT_AND R10, RCX
SF = INT_SLESS R10, 0:8
ZF = INT_EQUAL R10, 0:8
$U13480:8 = INT_AND R10, 0xff:8
$U13500:1 = POPCOUNT $U13480:8
$U13580:1 = INT_AND $U13500:1, 1:1
PF = INT_EQUAL $U13580:1, 0:1
RAX = INT_SEXT R11D
$U3300:8 = INT_MULT R10, 1:8
$U3400:8 = INT_ADD RAX, $U3300:8
$Uc300:8 = LOAD ram($U3400:8)
RDX = COPY $Uc300:8
$U3100:8 = INT_ADD RBX, 16:8
$Uc300:8 = LOAD ram($U3100:8)
RAX = COPY $Uc300:8
$U3100:8 = INT_ADD RAX, 8:8
$Uc200:4 = LOAD ram($U3100:8)
ECX = COPY $Uc200:4
RCX = INT_ZEXT ECX
$U3100:8 = INT_ADD RBX, 8:8
$Uc300:8 = LOAD ram($U3100:8)
RAX = COPY $Uc300:8
$U3880:8 = INT_ADD 3:8, RCX
$U3900:8 = INT_MULT RAX, 1:8
$U3a00:8 = INT_ADD $U3880:8, $U3900:8
CF = COPY 0:1
OF = COPY 0:1
$Uc080:1 = LOAD ram($U3a00:8)
$U55f80:1 = INT_AND $Uc080:1, 15:1
SF = INT_SLESS $U55f80:1, 0:1
ZF = INT_EQUAL $U55f80:1, 0:1
$U13480:1 = INT_AND $U55f80:1, 0xff:1
$U13500:1 = POPCOUNT $U13480:1
$U13580:1 = INT_AND $U13500:1, 1:1
PF = INT_EQUAL $U13580:1, 0:1
CBRANCH *[ram]0x140001b4b:8, ZF
$U3880:8 = INT_ADD 3:8, RCX
$U3900:8 = INT_MULT RAX, 1:8
$U3a00:8 = INT_ADD $U3880:8, $U3900:8
$Uc080:1 = LOAD ram($U3a00:8)
EAX = INT_ZEXT $Uc080:1
RAX = INT_ZEXT EAX
CF = COPY 0:1
OF = COPY 0:1
EAX = INT_AND EAX, 0xfffffff0:4
RAX = INT_ZEXT EAX
SF = INT_SLESS EAX, 0:4
ZF = INT_EQUAL EAX, 0:4
$U13480:4 = INT_AND EAX, 0xff:4
$U13500:1 = POPCOUNT $U13480:4
$U13580:1 = INT_AND $U13500:1, 1:1
PF = INT_EQUAL $U13580:1, 0:1
CF = INT_CARRY R9, RAX
OF = INT_SCARRY R9, RAX
R9 = INT_ADD R9, RAX
SF = INT_SLESS R9, 0:8
ZF = INT_EQUAL R9, 0:8
$U13480:8 = INT_AND R9, 0xff:8
$U13500:1 = POPCOUNT $U13480:8
$U13580:1 = INT_AND $U13500:1, 1:1
PF = INT_EQUAL $U13580:1, 0:1
CF = COPY 0:1
OF = COPY 0:1
R9 = INT_XOR R9, RDX
SF = INT_SLESS R9, 0:8
ZF = INT_EQUAL R9, 0:8
$U13480:8 = INT_AND R9, 0xff:8
$U13500:1 = POPCOUNT $U13480:8
$U13580:1 = INT_AND $U13500:1, 1:1
PF = INT_EQUAL $U13580:1, 0:1
RCX = COPY R9
$U3c380:8 = COPY 0:8
$U3c380:8 = LOAD ram(RSP)
RSP = INT_ADD RSP, 8:8
RBX = COPY $U3c380:8
CALL *[ram]0x140001280:8
RETURN 0:8
$U34d80:8 = CALLOTHER "swi", 3:1
CALLIND $U34d80:8
RETURN 0:1
BRANCHIND RAX
$U34d80:8 = CALLOTHER "swi", 3:1
CALLIND $U34d80:8
RETURN 0:1
$Uf000:8 = COPY RBP
RSP = INT_SUB RSP, 8:8
STORE ram(RSP), $Uf000:8
CF = INT_LESS RSP, 32:8
OF = INT_SBORROW RSP, 32:8
RSP = INT_SUB RSP, 32:8
SF = INT_SLESS RSP, 0:8
ZF = INT_EQUAL RSP, 0:8
$U13480:8 = INT_AND RSP, 0xff:8
$U13500:1 = POPCOUNT $U13480:8
$U13580:1 = INT_AND $U13500:1, 1:1
PF = INT_EQUAL $U13580:1, 0:1
RBP = COPY RDX
$Uc300:8 = LOAD ram(RCX)
RAX = COPY $Uc300:8
RDX = COPY RCX
$Uc200:4 = LOAD ram(RAX)
ECX = COPY $Uc200:4
RCX = INT_ZEXT ECX
RSP = INT_SUB RSP, 8:8
STORE ram(RSP), 0x140001b96:8
CALL *[ram]0x1400018ee:8
CF = INT_CARRY RSP, 32:8
OF = INT_SCARRY RSP, 32:8
RSP = INT_ADD RSP, 32:8
SF = INT_SLESS RSP, 0:8
ZF = INT_EQUAL RSP, 0:8
$U13480:8 = INT_AND RSP, 0xff:8
$U13500:1 = POPCOUNT $U13480:8
$U13580:1 = INT_AND $U13500:1, 1:1
PF = INT_EQUAL $U13580:1, 0:1
$U3c380:8 = COPY 0:8
$U3c380:8 = LOAD ram(RSP)
RSP = INT_ADD RSP, 8:8
RBP = COPY $U3c380:8
RIP = LOAD ram(RSP)
RSP = INT_ADD RSP, 8:8
RETURN RIP
$U34d80:8 = CALLOTHER "swi", 3:1
CALLIND $U34d80:8
RETURN 0:1
$Uf000:8 = COPY RBP
RSP = INT_SUB RSP, 8:8
STORE ram(RSP), $Uf000:8
CF = INT_LESS RSP, 32:8
OF = INT_SBORROW RSP, 32:8
RSP = INT_SUB RSP, 32:8
SF = INT_SLESS RSP, 0:8
ZF = INT_EQUAL RSP, 0:8
$U13480:8 = INT_AND RSP, 0xff:8
$U13500:1 = POPCOUNT $U13480:8
$U13580:1 = INT_AND $U13500:1, 1:1
PF = INT_EQUAL $U13580:1, 0:1
RBP = COPY RDX
$Uc300:8 = LOAD ram(RCX)
RAX = COPY $Uc300:8
CF = COPY 0:1
OF = COPY 0:1
ECX = INT_XOR ECX, ECX
RCX = INT_ZEXT ECX
SF = INT_SLESS ECX, 0:4
ZF = INT_EQUAL ECX, 0:4
$U13480:4 = INT_AND ECX, 0xff:4
$U13500:1 = POPCOUNT $U13480:4
$U13580:1 = INT_AND $U13500:1, 1:1
PF = INT_EQUAL $U13580:1, 0:1
$Uc280:4 = LOAD ram(RAX)
$U25580:4 = COPY $Uc280:4
CF = INT_LESS $U25580:4, 0xc0000005:4
OF = INT_SBORROW $U25580:4, 0xc0000005:4
$U25680:4 = INT_SUB $U25580:4, 0xc0000005:4
SF = INT_SLESS $U25680:4, 0:4
ZF = INT_EQUAL $U25680:4, 0:4
$U13480:4 = INT_AND $U25680:4, 0xff:4
$U13500:1 = POPCOUNT $U13480:4
$U13580:1 = INT_AND $U13500:1, 1:1
PF = INT_EQUAL $U13580:1, 0:1
CL = COPY ZF
EAX = COPY ECX
RAX = INT_ZEXT EAX
CF = INT_CARRY RSP, 32:8
OF = INT_SCARRY RSP, 32:8
RSP = INT_ADD RSP, 32:8
SF = INT_SLESS RSP, 0:8
ZF = INT_EQUAL RSP, 0:8
$U13480:8 = INT_AND RSP, 0xff:8
$U13500:1 = POPCOUNT $U13480:8
$U13580:1 = INT_AND $U13500:1, 1:1
PF = INT_EQUAL $U13580:1, 0:1
$U3c380:8 = COPY 0:8
$U3c380:8 = LOAD ram(RSP)
RSP = INT_ADD RSP, 8:8
RBP = COPY $U3c380:8
RIP = LOAD ram(RSP)
RSP = INT_ADD RSP, 8:8
RETURN RIP
